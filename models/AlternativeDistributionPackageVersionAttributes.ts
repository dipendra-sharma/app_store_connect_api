
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AlternativeDistributionPackageVersionAttributes
 */
export interface AlternativeDistributionPackageVersionAttributes {
    /**
     * 
     * @type {string}
     * @memberof AlternativeDistributionPackageVersionAttributes
     */
    url?: string;
    /**
     * 
     * @type {Date}
     * @memberof AlternativeDistributionPackageVersionAttributes
     */
    urlExpirationDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof AlternativeDistributionPackageVersionAttributes
     */
    version?: string;
    /**
     * 
     * @type {string}
     * @memberof AlternativeDistributionPackageVersionAttributes
     */
    fileChecksum?: string;
    /**
     * 
     * @type {string}
     * @memberof AlternativeDistributionPackageVersionAttributes
     */
    state?: AlternativeDistributionPackageVersionAttributesStateEnum;
}


/**
 * @export
 */
export const AlternativeDistributionPackageVersionAttributesStateEnum = {
    Completed: 'COMPLETED',
    Replaced: 'REPLACED'
} as const;
export type AlternativeDistributionPackageVersionAttributesStateEnum = typeof AlternativeDistributionPackageVersionAttributesStateEnum[keyof typeof AlternativeDistributionPackageVersionAttributesStateEnum];


/**
 * Check if a given object implements the AlternativeDistributionPackageVersionAttributes interface.
 */
export function instanceOfAlternativeDistributionPackageVersionAttributes(value: object): value is AlternativeDistributionPackageVersionAttributes {
    return true;
}

export function AlternativeDistributionPackageVersionAttributesFromJSON(json: any): AlternativeDistributionPackageVersionAttributes {
    return AlternativeDistributionPackageVersionAttributesFromJSONTyped(json, false);
}

export function AlternativeDistributionPackageVersionAttributesFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlternativeDistributionPackageVersionAttributes {
    if (json == null) {
        return json;
    }
    return {
        
        'url': json['url'] == null ? undefined : json['url'],
        'urlExpirationDate': json['urlExpirationDate'] == null ? undefined : (new Date(json['urlExpirationDate'])),
        'version': json['version'] == null ? undefined : json['version'],
        'fileChecksum': json['fileChecksum'] == null ? undefined : json['fileChecksum'],
        'state': json['state'] == null ? undefined : json['state'],
    };
}

export function AlternativeDistributionPackageVersionAttributesToJSON(json: any): AlternativeDistributionPackageVersionAttributes {
    return AlternativeDistributionPackageVersionAttributesToJSONTyped(json, false);
}

export function AlternativeDistributionPackageVersionAttributesToJSONTyped(value?: AlternativeDistributionPackageVersionAttributes | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'url': value['url'],
        'urlExpirationDate': value['urlExpirationDate'] == null ? undefined : ((value['urlExpirationDate']).toISOString()),
        'version': value['version'],
        'fileChecksum': value['fileChecksum'],
        'state': value['state'],
    };
}

