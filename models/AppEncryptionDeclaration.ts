/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AppEncryptionDeclarationAttributes } from './AppEncryptionDeclarationAttributes';
import {
    AppEncryptionDeclarationAttributesFromJSON,
    AppEncryptionDeclarationAttributesFromJSONTyped,
    AppEncryptionDeclarationAttributesToJSON,
    AppEncryptionDeclarationAttributesToJSONTyped,
} from './AppEncryptionDeclarationAttributes';
import type { ResourceLinks } from './ResourceLinks';
import {
    ResourceLinksFromJSON,
    ResourceLinksFromJSONTyped,
    ResourceLinksToJSON,
    ResourceLinksToJSONTyped,
} from './ResourceLinks';
import type { AppEncryptionDeclarationRelationships } from './AppEncryptionDeclarationRelationships';
import {
    AppEncryptionDeclarationRelationshipsFromJSON,
    AppEncryptionDeclarationRelationshipsFromJSONTyped,
    AppEncryptionDeclarationRelationshipsToJSON,
    AppEncryptionDeclarationRelationshipsToJSONTyped,
} from './AppEncryptionDeclarationRelationships';

/**
 * 
 * @export
 * @interface AppEncryptionDeclaration
 */
export interface AppEncryptionDeclaration {
    /**
     * 
     * @type {string}
     * @memberof AppEncryptionDeclaration
     */
    type: AppEncryptionDeclarationTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof AppEncryptionDeclaration
     */
    id: string;
    /**
     * 
     * @type {AppEncryptionDeclarationAttributes}
     * @memberof AppEncryptionDeclaration
     */
    attributes?: AppEncryptionDeclarationAttributes;
    /**
     * 
     * @type {AppEncryptionDeclarationRelationships}
     * @memberof AppEncryptionDeclaration
     */
    relationships?: AppEncryptionDeclarationRelationships;
    /**
     * 
     * @type {ResourceLinks}
     * @memberof AppEncryptionDeclaration
     */
    links?: ResourceLinks;
}


/**
 * @export
 */
export const AppEncryptionDeclarationTypeEnum = {
    AppEncryptionDeclarations: 'appEncryptionDeclarations'
} as const;
export type AppEncryptionDeclarationTypeEnum = typeof AppEncryptionDeclarationTypeEnum[keyof typeof AppEncryptionDeclarationTypeEnum];


/**
 * Check if a given object implements the AppEncryptionDeclaration interface.
 */
export function instanceOfAppEncryptionDeclaration(value: object): value is AppEncryptionDeclaration {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function AppEncryptionDeclarationFromJSON(json: any): AppEncryptionDeclaration {
    return AppEncryptionDeclarationFromJSONTyped(json, false);
}

export function AppEncryptionDeclarationFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppEncryptionDeclaration {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'id': json['id'],
        'attributes': json['attributes'] == null ? undefined : AppEncryptionDeclarationAttributesFromJSON(json['attributes']),
        'relationships': json['relationships'] == null ? undefined : AppEncryptionDeclarationRelationshipsFromJSON(json['relationships']),
        'links': json['links'] == null ? undefined : ResourceLinksFromJSON(json['links']),
    };
}

export function AppEncryptionDeclarationToJSON(json: any): AppEncryptionDeclaration {
    return AppEncryptionDeclarationToJSONTyped(json, false);
}

export function AppEncryptionDeclarationToJSONTyped(value?: AppEncryptionDeclaration | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'id': value['id'],
        'attributes': AppEncryptionDeclarationAttributesToJSON(value['attributes']),
        'relationships': AppEncryptionDeclarationRelationshipsToJSON(value['relationships']),
        'links': ResourceLinksToJSON(value['links']),
    };
}

