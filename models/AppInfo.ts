
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResourceLinks } from './ResourceLinks';
import {
    ResourceLinksFromJSON,
    ResourceLinksFromJSONTyped,
    ResourceLinksToJSON,
    ResourceLinksToJSONTyped,
} from './ResourceLinks';
import type { AppInfoAttributes } from './AppInfoAttributes';
import {
    AppInfoAttributesFromJSON,
    AppInfoAttributesFromJSONTyped,
    AppInfoAttributesToJSON,
    AppInfoAttributesToJSONTyped,
} from './AppInfoAttributes';
import type { AppInfoRelationships } from './AppInfoRelationships';
import {
    AppInfoRelationshipsFromJSON,
    AppInfoRelationshipsFromJSONTyped,
    AppInfoRelationshipsToJSON,
    AppInfoRelationshipsToJSONTyped,
} from './AppInfoRelationships';

/**
 * 
 * @export
 * @interface AppInfo
 */
export interface AppInfo {
    /**
     * 
     * @type {string}
     * @memberof AppInfo
     */
    type: AppInfoTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof AppInfo
     */
    id: string;
    /**
     * 
     * @type {AppInfoAttributes}
     * @memberof AppInfo
     */
    attributes?: AppInfoAttributes;
    /**
     * 
     * @type {AppInfoRelationships}
     * @memberof AppInfo
     */
    relationships?: AppInfoRelationships;
    /**
     * 
     * @type {ResourceLinks}
     * @memberof AppInfo
     */
    links?: ResourceLinks;
}


/**
 * @export
 */
export const AppInfoTypeEnum = {
    AppInfos: 'appInfos'
} as const;
export type AppInfoTypeEnum = typeof AppInfoTypeEnum[keyof typeof AppInfoTypeEnum];


/**
 * Check if a given object implements the AppInfo interface.
 */
export function instanceOfAppInfo(value: object): value is AppInfo {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function AppInfoFromJSON(json: any): AppInfo {
    return AppInfoFromJSONTyped(json, false);
}

export function AppInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'id': json['id'],
        'attributes': json['attributes'] == null ? undefined : AppInfoAttributesFromJSON(json['attributes']),
        'relationships': json['relationships'] == null ? undefined : AppInfoRelationshipsFromJSON(json['relationships']),
        'links': json['links'] == null ? undefined : ResourceLinksFromJSON(json['links']),
    };
}

export function AppInfoToJSON(json: any): AppInfo {
    return AppInfoToJSONTyped(json, false);
}

export function AppInfoToJSONTyped(value?: AppInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'id': value['id'],
        'attributes': AppInfoAttributesToJSON(value['attributes']),
        'relationships': AppInfoRelationshipsToJSON(value['relationships']),
        'links': ResourceLinksToJSON(value['links']),
    };
}

