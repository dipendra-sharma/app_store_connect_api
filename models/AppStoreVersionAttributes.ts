
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Platform } from './Platform';
import {
    PlatformFromJSON,
    PlatformFromJSONTyped,
    PlatformToJSON,
    PlatformToJSONTyped,
} from './Platform';
import type { AppStoreVersionState } from './AppStoreVersionState';
import {
    AppStoreVersionStateFromJSON,
    AppStoreVersionStateFromJSONTyped,
    AppStoreVersionStateToJSON,
    AppStoreVersionStateToJSONTyped,
} from './AppStoreVersionState';
import type { AppVersionState } from './AppVersionState';
import {
    AppVersionStateFromJSON,
    AppVersionStateFromJSONTyped,
    AppVersionStateToJSON,
    AppVersionStateToJSONTyped,
} from './AppVersionState';

/**
 * 
 * @export
 * @interface AppStoreVersionAttributes
 */
export interface AppStoreVersionAttributes {
    /**
     * 
     * @type {Platform}
     * @memberof AppStoreVersionAttributes
     */
    platform?: Platform;
    /**
     * 
     * @type {string}
     * @memberof AppStoreVersionAttributes
     */
    versionString?: string;
    /**
     * 
     * @type {AppStoreVersionState}
     * @memberof AppStoreVersionAttributes
     */
    appStoreState?: AppStoreVersionState;
    /**
     * 
     * @type {AppVersionState}
     * @memberof AppStoreVersionAttributes
     */
    appVersionState?: AppVersionState;
    /**
     * 
     * @type {string}
     * @memberof AppStoreVersionAttributes
     */
    copyright?: string;
    /**
     * 
     * @type {string}
     * @memberof AppStoreVersionAttributes
     */
    reviewType?: AppStoreVersionAttributesReviewTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof AppStoreVersionAttributes
     */
    releaseType?: AppStoreVersionAttributesReleaseTypeEnum;
    /**
     * 
     * @type {Date}
     * @memberof AppStoreVersionAttributes
     */
    earliestReleaseDate?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof AppStoreVersionAttributes
     */
    downloadable?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof AppStoreVersionAttributes
     */
    createdDate?: Date;
}


/**
 * @export
 */
export const AppStoreVersionAttributesReviewTypeEnum = {
    AppStore: 'APP_STORE',
    Notarization: 'NOTARIZATION'
} as const;
export type AppStoreVersionAttributesReviewTypeEnum = typeof AppStoreVersionAttributesReviewTypeEnum[keyof typeof AppStoreVersionAttributesReviewTypeEnum];

/**
 * @export
 */
export const AppStoreVersionAttributesReleaseTypeEnum = {
    Manual: 'MANUAL',
    AfterApproval: 'AFTER_APPROVAL',
    Scheduled: 'SCHEDULED'
} as const;
export type AppStoreVersionAttributesReleaseTypeEnum = typeof AppStoreVersionAttributesReleaseTypeEnum[keyof typeof AppStoreVersionAttributesReleaseTypeEnum];


/**
 * Check if a given object implements the AppStoreVersionAttributes interface.
 */
export function instanceOfAppStoreVersionAttributes(value: object): value is AppStoreVersionAttributes {
    return true;
}

export function AppStoreVersionAttributesFromJSON(json: any): AppStoreVersionAttributes {
    return AppStoreVersionAttributesFromJSONTyped(json, false);
}

export function AppStoreVersionAttributesFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppStoreVersionAttributes {
    if (json == null) {
        return json;
    }
    return {
        
        'platform': json['platform'] == null ? undefined : PlatformFromJSON(json['platform']),
        'versionString': json['versionString'] == null ? undefined : json['versionString'],
        'appStoreState': json['appStoreState'] == null ? undefined : AppStoreVersionStateFromJSON(json['appStoreState']),
        'appVersionState': json['appVersionState'] == null ? undefined : AppVersionStateFromJSON(json['appVersionState']),
        'copyright': json['copyright'] == null ? undefined : json['copyright'],
        'reviewType': json['reviewType'] == null ? undefined : json['reviewType'],
        'releaseType': json['releaseType'] == null ? undefined : json['releaseType'],
        'earliestReleaseDate': json['earliestReleaseDate'] == null ? undefined : (new Date(json['earliestReleaseDate'])),
        'downloadable': json['downloadable'] == null ? undefined : json['downloadable'],
        'createdDate': json['createdDate'] == null ? undefined : (new Date(json['createdDate'])),
    };
}

export function AppStoreVersionAttributesToJSON(json: any): AppStoreVersionAttributes {
    return AppStoreVersionAttributesToJSONTyped(json, false);
}

export function AppStoreVersionAttributesToJSONTyped(value?: AppStoreVersionAttributes | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'platform': PlatformToJSON(value['platform']),
        'versionString': value['versionString'],
        'appStoreState': AppStoreVersionStateToJSON(value['appStoreState']),
        'appVersionState': AppVersionStateToJSON(value['appVersionState']),
        'copyright': value['copyright'],
        'reviewType': value['reviewType'],
        'releaseType': value['releaseType'],
        'earliestReleaseDate': value['earliestReleaseDate'] == null ? undefined : ((value['earliestReleaseDate']).toISOString()),
        'downloadable': value['downloadable'],
        'createdDate': value['createdDate'] == null ? undefined : ((value['createdDate']).toISOString()),
    };
}

