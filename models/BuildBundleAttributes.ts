/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BuildBundleAttributes
 */
export interface BuildBundleAttributes {
    /**
     * 
     * @type {string}
     * @memberof BuildBundleAttributes
     */
    bundleId?: string;
    /**
     * 
     * @type {string}
     * @memberof BuildBundleAttributes
     */
    bundleType?: BuildBundleAttributesBundleTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof BuildBundleAttributes
     */
    sdkBuild?: string;
    /**
     * 
     * @type {string}
     * @memberof BuildBundleAttributes
     */
    platformBuild?: string;
    /**
     * 
     * @type {string}
     * @memberof BuildBundleAttributes
     */
    fileName?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BuildBundleAttributes
     */
    hasSirikit?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BuildBundleAttributes
     */
    hasOnDemandResources?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BuildBundleAttributes
     */
    hasPrerenderedIcon?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BuildBundleAttributes
     */
    usesLocationServices?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BuildBundleAttributes
     */
    isIosBuildMacAppStoreCompatible?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BuildBundleAttributes
     */
    includesSymbols?: boolean;
    /**
     * 
     * @type {string}
     * @memberof BuildBundleAttributes
     */
    dSYMUrl?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof BuildBundleAttributes
     */
    supportedArchitectures?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof BuildBundleAttributes
     */
    requiredCapabilities?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof BuildBundleAttributes
     */
    deviceProtocols?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof BuildBundleAttributes
     */
    locales?: Array<string>;
    /**
     * 
     * @type {{ [key: string]: { [key: string]: string; }; }}
     * @memberof BuildBundleAttributes
     */
    entitlements?: { [key: string]: { [key: string]: string; }; };
}


/**
 * @export
 */
export const BuildBundleAttributesBundleTypeEnum = {
    App: 'APP',
    AppClip: 'APP_CLIP'
} as const;
export type BuildBundleAttributesBundleTypeEnum = typeof BuildBundleAttributesBundleTypeEnum[keyof typeof BuildBundleAttributesBundleTypeEnum];


/**
 * Check if a given object implements the BuildBundleAttributes interface.
 */
export function instanceOfBuildBundleAttributes(value: object): value is BuildBundleAttributes {
    return true;
}

export function BuildBundleAttributesFromJSON(json: any): BuildBundleAttributes {
    return BuildBundleAttributesFromJSONTyped(json, false);
}

export function BuildBundleAttributesFromJSONTyped(json: any, ignoreDiscriminator: boolean): BuildBundleAttributes {
    if (json == null) {
        return json;
    }
    return {
        
        'bundleId': json['bundleId'] == null ? undefined : json['bundleId'],
        'bundleType': json['bundleType'] == null ? undefined : json['bundleType'],
        'sdkBuild': json['sdkBuild'] == null ? undefined : json['sdkBuild'],
        'platformBuild': json['platformBuild'] == null ? undefined : json['platformBuild'],
        'fileName': json['fileName'] == null ? undefined : json['fileName'],
        'hasSirikit': json['hasSirikit'] == null ? undefined : json['hasSirikit'],
        'hasOnDemandResources': json['hasOnDemandResources'] == null ? undefined : json['hasOnDemandResources'],
        'hasPrerenderedIcon': json['hasPrerenderedIcon'] == null ? undefined : json['hasPrerenderedIcon'],
        'usesLocationServices': json['usesLocationServices'] == null ? undefined : json['usesLocationServices'],
        'isIosBuildMacAppStoreCompatible': json['isIosBuildMacAppStoreCompatible'] == null ? undefined : json['isIosBuildMacAppStoreCompatible'],
        'includesSymbols': json['includesSymbols'] == null ? undefined : json['includesSymbols'],
        'dSYMUrl': json['dSYMUrl'] == null ? undefined : json['dSYMUrl'],
        'supportedArchitectures': json['supportedArchitectures'] == null ? undefined : json['supportedArchitectures'],
        'requiredCapabilities': json['requiredCapabilities'] == null ? undefined : json['requiredCapabilities'],
        'deviceProtocols': json['deviceProtocols'] == null ? undefined : json['deviceProtocols'],
        'locales': json['locales'] == null ? undefined : json['locales'],
        'entitlements': json['entitlements'] == null ? undefined : json['entitlements'],
    };
}

export function BuildBundleAttributesToJSON(json: any): BuildBundleAttributes {
    return BuildBundleAttributesToJSONTyped(json, false);
}

export function BuildBundleAttributesToJSONTyped(value?: BuildBundleAttributes | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bundleId': value['bundleId'],
        'bundleType': value['bundleType'],
        'sdkBuild': value['sdkBuild'],
        'platformBuild': value['platformBuild'],
        'fileName': value['fileName'],
        'hasSirikit': value['hasSirikit'],
        'hasOnDemandResources': value['hasOnDemandResources'],
        'hasPrerenderedIcon': value['hasPrerenderedIcon'],
        'usesLocationServices': value['usesLocationServices'],
        'isIosBuildMacAppStoreCompatible': value['isIosBuildMacAppStoreCompatible'],
        'includesSymbols': value['includesSymbols'],
        'dSYMUrl': value['dSYMUrl'],
        'supportedArchitectures': value['supportedArchitectures'],
        'requiredCapabilities': value['requiredCapabilities'],
        'deviceProtocols': value['deviceProtocols'],
        'locales': value['locales'],
        'entitlements': value['entitlements'],
    };
}

