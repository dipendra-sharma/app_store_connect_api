/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CapabilitySetting } from './CapabilitySetting';
import {
    CapabilitySettingFromJSON,
    CapabilitySettingFromJSONTyped,
    CapabilitySettingToJSON,
    CapabilitySettingToJSONTyped,
} from './CapabilitySetting';
import type { CapabilityType } from './CapabilityType';
import {
    CapabilityTypeFromJSON,
    CapabilityTypeFromJSONTyped,
    CapabilityTypeToJSON,
    CapabilityTypeToJSONTyped,
} from './CapabilityType';

/**
 * 
 * @export
 * @interface BundleIdCapabilityAttributes
 */
export interface BundleIdCapabilityAttributes {
    /**
     * 
     * @type {CapabilityType}
     * @memberof BundleIdCapabilityAttributes
     */
    capabilityType?: CapabilityType;
    /**
     * 
     * @type {Array<CapabilitySetting>}
     * @memberof BundleIdCapabilityAttributes
     */
    settings?: Array<CapabilitySetting>;
}



/**
 * Check if a given object implements the BundleIdCapabilityAttributes interface.
 */
export function instanceOfBundleIdCapabilityAttributes(value: object): value is BundleIdCapabilityAttributes {
    return true;
}

export function BundleIdCapabilityAttributesFromJSON(json: any): BundleIdCapabilityAttributes {
    return BundleIdCapabilityAttributesFromJSONTyped(json, false);
}

export function BundleIdCapabilityAttributesFromJSONTyped(json: any, ignoreDiscriminator: boolean): BundleIdCapabilityAttributes {
    if (json == null) {
        return json;
    }
    return {
        
        'capabilityType': json['capabilityType'] == null ? undefined : CapabilityTypeFromJSON(json['capabilityType']),
        'settings': json['settings'] == null ? undefined : ((json['settings'] as Array<any>).map(CapabilitySettingFromJSON)),
    };
}

export function BundleIdCapabilityAttributesToJSON(json: any): BundleIdCapabilityAttributes {
    return BundleIdCapabilityAttributesToJSONTyped(json, false);
}

export function BundleIdCapabilityAttributesToJSONTyped(value?: BundleIdCapabilityAttributes | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'capabilityType': CapabilityTypeToJSON(value['capabilityType']),
        'settings': value['settings'] == null ? undefined : ((value['settings'] as Array<any>).map(CapabilitySettingToJSON)),
    };
}

