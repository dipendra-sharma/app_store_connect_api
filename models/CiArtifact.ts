/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CiArtifactAttributes } from './CiArtifactAttributes';
import {
    CiArtifactAttributesFromJSON,
    CiArtifactAttributesFromJSONTyped,
    CiArtifactAttributesToJSON,
    CiArtifactAttributesToJSONTyped,
} from './CiArtifactAttributes';
import type { ResourceLinks } from './ResourceLinks';
import {
    ResourceLinksFromJSON,
    ResourceLinksFromJSONTyped,
    ResourceLinksToJSON,
    ResourceLinksToJSONTyped,
} from './ResourceLinks';

/**
 * 
 * @export
 * @interface CiArtifact
 */
export interface CiArtifact {
    /**
     * 
     * @type {string}
     * @memberof CiArtifact
     */
    type: CiArtifactTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof CiArtifact
     */
    id: string;
    /**
     * 
     * @type {CiArtifactAttributes}
     * @memberof CiArtifact
     */
    attributes?: CiArtifactAttributes;
    /**
     * 
     * @type {ResourceLinks}
     * @memberof CiArtifact
     */
    links?: ResourceLinks;
}


/**
 * @export
 */
export const CiArtifactTypeEnum = {
    CiArtifacts: 'ciArtifacts'
} as const;
export type CiArtifactTypeEnum = typeof CiArtifactTypeEnum[keyof typeof CiArtifactTypeEnum];


/**
 * Check if a given object implements the CiArtifact interface.
 */
export function instanceOfCiArtifact(value: object): value is CiArtifact {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function CiArtifactFromJSON(json: any): CiArtifact {
    return CiArtifactFromJSONTyped(json, false);
}

export function CiArtifactFromJSONTyped(json: any, ignoreDiscriminator: boolean): CiArtifact {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'id': json['id'],
        'attributes': json['attributes'] == null ? undefined : CiArtifactAttributesFromJSON(json['attributes']),
        'links': json['links'] == null ? undefined : ResourceLinksFromJSON(json['links']),
    };
}

export function CiArtifactToJSON(json: any): CiArtifact {
    return CiArtifactToJSONTyped(json, false);
}

export function CiArtifactToJSONTyped(value?: CiArtifact | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'id': value['id'],
        'attributes': CiArtifactAttributesToJSON(value['attributes']),
        'links': ResourceLinksToJSON(value['links']),
    };
}

