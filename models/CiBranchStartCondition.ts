/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CiBranchPatterns } from './CiBranchPatterns';
import {
    CiBranchPatternsFromJSON,
    CiBranchPatternsFromJSONTyped,
    CiBranchPatternsToJSON,
    CiBranchPatternsToJSONTyped,
} from './CiBranchPatterns';
import type { CiFilesAndFoldersRule } from './CiFilesAndFoldersRule';
import {
    CiFilesAndFoldersRuleFromJSON,
    CiFilesAndFoldersRuleFromJSONTyped,
    CiFilesAndFoldersRuleToJSON,
    CiFilesAndFoldersRuleToJSONTyped,
} from './CiFilesAndFoldersRule';

/**
 * 
 * @export
 * @interface CiBranchStartCondition
 */
export interface CiBranchStartCondition {
    /**
     * 
     * @type {CiBranchPatterns}
     * @memberof CiBranchStartCondition
     */
    source?: CiBranchPatterns;
    /**
     * 
     * @type {CiFilesAndFoldersRule}
     * @memberof CiBranchStartCondition
     */
    filesAndFoldersRule?: CiFilesAndFoldersRule;
    /**
     * 
     * @type {boolean}
     * @memberof CiBranchStartCondition
     */
    autoCancel?: boolean;
}

/**
 * Check if a given object implements the CiBranchStartCondition interface.
 */
export function instanceOfCiBranchStartCondition(value: object): value is CiBranchStartCondition {
    return true;
}

export function CiBranchStartConditionFromJSON(json: any): CiBranchStartCondition {
    return CiBranchStartConditionFromJSONTyped(json, false);
}

export function CiBranchStartConditionFromJSONTyped(json: any, ignoreDiscriminator: boolean): CiBranchStartCondition {
    if (json == null) {
        return json;
    }
    return {
        
        'source': json['source'] == null ? undefined : CiBranchPatternsFromJSON(json['source']),
        'filesAndFoldersRule': json['filesAndFoldersRule'] == null ? undefined : CiFilesAndFoldersRuleFromJSON(json['filesAndFoldersRule']),
        'autoCancel': json['autoCancel'] == null ? undefined : json['autoCancel'],
    };
}

export function CiBranchStartConditionToJSON(json: any): CiBranchStartCondition {
    return CiBranchStartConditionToJSONTyped(json, false);
}

export function CiBranchStartConditionToJSONTyped(value?: CiBranchStartCondition | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'source': CiBranchPatternsToJSON(value['source']),
        'filesAndFoldersRule': CiFilesAndFoldersRuleToJSON(value['filesAndFoldersRule']),
        'autoCancel': value['autoCancel'],
    };
}

