/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CiExecutionProgress } from './CiExecutionProgress';
import {
    CiExecutionProgressFromJSON,
    CiExecutionProgressFromJSONTyped,
    CiExecutionProgressToJSON,
    CiExecutionProgressToJSONTyped,
} from './CiExecutionProgress';
import type { CiCompletionStatus } from './CiCompletionStatus';
import {
    CiCompletionStatusFromJSON,
    CiCompletionStatusFromJSONTyped,
    CiCompletionStatusToJSON,
    CiCompletionStatusToJSONTyped,
} from './CiCompletionStatus';
import type { CiIssueCounts } from './CiIssueCounts';
import {
    CiIssueCountsFromJSON,
    CiIssueCountsFromJSONTyped,
    CiIssueCountsToJSON,
    CiIssueCountsToJSONTyped,
} from './CiIssueCounts';
import type { CiActionType } from './CiActionType';
import {
    CiActionTypeFromJSON,
    CiActionTypeFromJSONTyped,
    CiActionTypeToJSON,
    CiActionTypeToJSONTyped,
} from './CiActionType';

/**
 * 
 * @export
 * @interface CiBuildActionAttributes
 */
export interface CiBuildActionAttributes {
    /**
     * 
     * @type {string}
     * @memberof CiBuildActionAttributes
     */
    name?: string;
    /**
     * 
     * @type {CiActionType}
     * @memberof CiBuildActionAttributes
     */
    actionType?: CiActionType;
    /**
     * 
     * @type {Date}
     * @memberof CiBuildActionAttributes
     */
    startedDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof CiBuildActionAttributes
     */
    finishedDate?: Date;
    /**
     * 
     * @type {CiIssueCounts}
     * @memberof CiBuildActionAttributes
     */
    issueCounts?: CiIssueCounts;
    /**
     * 
     * @type {CiExecutionProgress}
     * @memberof CiBuildActionAttributes
     */
    executionProgress?: CiExecutionProgress;
    /**
     * 
     * @type {CiCompletionStatus}
     * @memberof CiBuildActionAttributes
     */
    completionStatus?: CiCompletionStatus;
    /**
     * 
     * @type {boolean}
     * @memberof CiBuildActionAttributes
     */
    isRequiredToPass?: boolean;
}



/**
 * Check if a given object implements the CiBuildActionAttributes interface.
 */
export function instanceOfCiBuildActionAttributes(value: object): value is CiBuildActionAttributes {
    return true;
}

export function CiBuildActionAttributesFromJSON(json: any): CiBuildActionAttributes {
    return CiBuildActionAttributesFromJSONTyped(json, false);
}

export function CiBuildActionAttributesFromJSONTyped(json: any, ignoreDiscriminator: boolean): CiBuildActionAttributes {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'actionType': json['actionType'] == null ? undefined : CiActionTypeFromJSON(json['actionType']),
        'startedDate': json['startedDate'] == null ? undefined : (new Date(json['startedDate'])),
        'finishedDate': json['finishedDate'] == null ? undefined : (new Date(json['finishedDate'])),
        'issueCounts': json['issueCounts'] == null ? undefined : CiIssueCountsFromJSON(json['issueCounts']),
        'executionProgress': json['executionProgress'] == null ? undefined : CiExecutionProgressFromJSON(json['executionProgress']),
        'completionStatus': json['completionStatus'] == null ? undefined : CiCompletionStatusFromJSON(json['completionStatus']),
        'isRequiredToPass': json['isRequiredToPass'] == null ? undefined : json['isRequiredToPass'],
    };
}

export function CiBuildActionAttributesToJSON(json: any): CiBuildActionAttributes {
    return CiBuildActionAttributesToJSONTyped(json, false);
}

export function CiBuildActionAttributesToJSONTyped(value?: CiBuildActionAttributes | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'actionType': CiActionTypeToJSON(value['actionType']),
        'startedDate': value['startedDate'] == null ? undefined : ((value['startedDate']).toISOString()),
        'finishedDate': value['finishedDate'] == null ? undefined : ((value['finishedDate']).toISOString()),
        'issueCounts': CiIssueCountsToJSON(value['issueCounts']),
        'executionProgress': CiExecutionProgressToJSON(value['executionProgress']),
        'completionStatus': CiCompletionStatusToJSON(value['completionStatus']),
        'isRequiredToPass': value['isRequiredToPass'],
    };
}

