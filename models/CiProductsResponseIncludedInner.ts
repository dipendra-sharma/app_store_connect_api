
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { App } from './App';
import {
    instanceOfApp,
    AppFromJSON,
    AppFromJSONTyped,
    AppToJSON,
} from './App';
import type { BundleId } from './BundleId';
import {
    instanceOfBundleId,
    BundleIdFromJSON,
    BundleIdFromJSONTyped,
    BundleIdToJSON,
} from './BundleId';
import type { ScmRepository } from './ScmRepository';
import {
    instanceOfScmRepository,
    ScmRepositoryFromJSON,
    ScmRepositoryFromJSONTyped,
    ScmRepositoryToJSON,
} from './ScmRepository';

/**
 * @type CiProductsResponseIncludedInner
 * 
 * @export
 */
export type CiProductsResponseIncludedInner = App | BundleId | ScmRepository;

export function CiProductsResponseIncludedInnerFromJSON(json: any): CiProductsResponseIncludedInner {
    return CiProductsResponseIncludedInnerFromJSONTyped(json, false);
}

export function CiProductsResponseIncludedInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CiProductsResponseIncludedInner {
    if (json == null) {
        return json;
    }
    if (instanceOfApp(json)) {
        return AppFromJSONTyped(json, true);
    }
    if (instanceOfBundleId(json)) {
        return BundleIdFromJSONTyped(json, true);
    }
    if (instanceOfScmRepository(json)) {
        return ScmRepositoryFromJSONTyped(json, true);
    }

    return {} as any;
}

export function CiProductsResponseIncludedInnerToJSON(json: any): any {
    return CiProductsResponseIncludedInnerToJSONTyped(json, false);
}

export function CiProductsResponseIncludedInnerToJSONTyped(value?: CiProductsResponseIncludedInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    if (instanceOfApp(value)) {
        return AppToJSON(value as App);
    }
    if (instanceOfBundleId(value)) {
        return BundleIdToJSON(value as BundleId);
    }
    if (instanceOfScmRepository(value)) {
        return ScmRepositoryToJSON(value as ScmRepository);
    }

    return {};
}

