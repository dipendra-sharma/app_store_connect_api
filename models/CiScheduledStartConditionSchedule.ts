
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CiScheduledStartConditionSchedule
 */
export interface CiScheduledStartConditionSchedule {
    /**
     * 
     * @type {string}
     * @memberof CiScheduledStartConditionSchedule
     */
    frequency?: CiScheduledStartConditionScheduleFrequencyEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof CiScheduledStartConditionSchedule
     */
    days?: Array<CiScheduledStartConditionScheduleDaysEnum>;
    /**
     * 
     * @type {number}
     * @memberof CiScheduledStartConditionSchedule
     */
    hour?: number;
    /**
     * 
     * @type {number}
     * @memberof CiScheduledStartConditionSchedule
     */
    minute?: number;
    /**
     * 
     * @type {string}
     * @memberof CiScheduledStartConditionSchedule
     */
    timezone?: string;
}


/**
 * @export
 */
export const CiScheduledStartConditionScheduleFrequencyEnum = {
    Weekly: 'WEEKLY',
    Daily: 'DAILY',
    Hourly: 'HOURLY'
} as const;
export type CiScheduledStartConditionScheduleFrequencyEnum = typeof CiScheduledStartConditionScheduleFrequencyEnum[keyof typeof CiScheduledStartConditionScheduleFrequencyEnum];

/**
 * @export
 */
export const CiScheduledStartConditionScheduleDaysEnum = {
    Sunday: 'SUNDAY',
    Monday: 'MONDAY',
    Tuesday: 'TUESDAY',
    Wednesday: 'WEDNESDAY',
    Thursday: 'THURSDAY',
    Friday: 'FRIDAY',
    Saturday: 'SATURDAY'
} as const;
export type CiScheduledStartConditionScheduleDaysEnum = typeof CiScheduledStartConditionScheduleDaysEnum[keyof typeof CiScheduledStartConditionScheduleDaysEnum];


/**
 * Check if a given object implements the CiScheduledStartConditionSchedule interface.
 */
export function instanceOfCiScheduledStartConditionSchedule(value: object): value is CiScheduledStartConditionSchedule {
    return true;
}

export function CiScheduledStartConditionScheduleFromJSON(json: any): CiScheduledStartConditionSchedule {
    return CiScheduledStartConditionScheduleFromJSONTyped(json, false);
}

export function CiScheduledStartConditionScheduleFromJSONTyped(json: any, ignoreDiscriminator: boolean): CiScheduledStartConditionSchedule {
    if (json == null) {
        return json;
    }
    return {
        
        'frequency': json['frequency'] == null ? undefined : json['frequency'],
        'days': json['days'] == null ? undefined : json['days'],
        'hour': json['hour'] == null ? undefined : json['hour'],
        'minute': json['minute'] == null ? undefined : json['minute'],
        'timezone': json['timezone'] == null ? undefined : json['timezone'],
    };
}

export function CiScheduledStartConditionScheduleToJSON(json: any): CiScheduledStartConditionSchedule {
    return CiScheduledStartConditionScheduleToJSONTyped(json, false);
}

export function CiScheduledStartConditionScheduleToJSONTyped(value?: CiScheduledStartConditionSchedule | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'frequency': value['frequency'],
        'days': value['days'],
        'hour': value['hour'],
        'minute': value['minute'],
        'timezone': value['timezone'],
    };
}

