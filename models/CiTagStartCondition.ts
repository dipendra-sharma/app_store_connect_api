/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CiFilesAndFoldersRule } from './CiFilesAndFoldersRule';
import {
    CiFilesAndFoldersRuleFromJSON,
    CiFilesAndFoldersRuleFromJSONTyped,
    CiFilesAndFoldersRuleToJSON,
    CiFilesAndFoldersRuleToJSONTyped,
} from './CiFilesAndFoldersRule';
import type { CiTagPatterns } from './CiTagPatterns';
import {
    CiTagPatternsFromJSON,
    CiTagPatternsFromJSONTyped,
    CiTagPatternsToJSON,
    CiTagPatternsToJSONTyped,
} from './CiTagPatterns';

/**
 * 
 * @export
 * @interface CiTagStartCondition
 */
export interface CiTagStartCondition {
    /**
     * 
     * @type {CiTagPatterns}
     * @memberof CiTagStartCondition
     */
    source?: CiTagPatterns;
    /**
     * 
     * @type {CiFilesAndFoldersRule}
     * @memberof CiTagStartCondition
     */
    filesAndFoldersRule?: CiFilesAndFoldersRule;
    /**
     * 
     * @type {boolean}
     * @memberof CiTagStartCondition
     */
    autoCancel?: boolean;
}

/**
 * Check if a given object implements the CiTagStartCondition interface.
 */
export function instanceOfCiTagStartCondition(value: object): value is CiTagStartCondition {
    return true;
}

export function CiTagStartConditionFromJSON(json: any): CiTagStartCondition {
    return CiTagStartConditionFromJSONTyped(json, false);
}

export function CiTagStartConditionFromJSONTyped(json: any, ignoreDiscriminator: boolean): CiTagStartCondition {
    if (json == null) {
        return json;
    }
    return {
        
        'source': json['source'] == null ? undefined : CiTagPatternsFromJSON(json['source']),
        'filesAndFoldersRule': json['filesAndFoldersRule'] == null ? undefined : CiFilesAndFoldersRuleFromJSON(json['filesAndFoldersRule']),
        'autoCancel': json['autoCancel'] == null ? undefined : json['autoCancel'],
    };
}

export function CiTagStartConditionToJSON(json: any): CiTagStartCondition {
    return CiTagStartConditionToJSONTyped(json, false);
}

export function CiTagStartConditionToJSONTyped(value?: CiTagStartCondition | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'source': CiTagPatternsToJSON(value['source']),
        'filesAndFoldersRule': CiFilesAndFoldersRuleToJSON(value['filesAndFoldersRule']),
        'autoCancel': value['autoCancel'],
    };
}

