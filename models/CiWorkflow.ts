/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CiWorkflowAttributes } from './CiWorkflowAttributes';
import {
    CiWorkflowAttributesFromJSON,
    CiWorkflowAttributesFromJSONTyped,
    CiWorkflowAttributesToJSON,
    CiWorkflowAttributesToJSONTyped,
} from './CiWorkflowAttributes';
import type { CiWorkflowRelationships } from './CiWorkflowRelationships';
import {
    CiWorkflowRelationshipsFromJSON,
    CiWorkflowRelationshipsFromJSONTyped,
    CiWorkflowRelationshipsToJSON,
    CiWorkflowRelationshipsToJSONTyped,
} from './CiWorkflowRelationships';
import type { ResourceLinks } from './ResourceLinks';
import {
    ResourceLinksFromJSON,
    ResourceLinksFromJSONTyped,
    ResourceLinksToJSON,
    ResourceLinksToJSONTyped,
} from './ResourceLinks';

/**
 * 
 * @export
 * @interface CiWorkflow
 */
export interface CiWorkflow {
    /**
     * 
     * @type {string}
     * @memberof CiWorkflow
     */
    type: CiWorkflowTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof CiWorkflow
     */
    id: string;
    /**
     * 
     * @type {CiWorkflowAttributes}
     * @memberof CiWorkflow
     */
    attributes?: CiWorkflowAttributes;
    /**
     * 
     * @type {CiWorkflowRelationships}
     * @memberof CiWorkflow
     */
    relationships?: CiWorkflowRelationships;
    /**
     * 
     * @type {ResourceLinks}
     * @memberof CiWorkflow
     */
    links?: ResourceLinks;
}


/**
 * @export
 */
export const CiWorkflowTypeEnum = {
    CiWorkflows: 'ciWorkflows'
} as const;
export type CiWorkflowTypeEnum = typeof CiWorkflowTypeEnum[keyof typeof CiWorkflowTypeEnum];


/**
 * Check if a given object implements the CiWorkflow interface.
 */
export function instanceOfCiWorkflow(value: object): value is CiWorkflow {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function CiWorkflowFromJSON(json: any): CiWorkflow {
    return CiWorkflowFromJSONTyped(json, false);
}

export function CiWorkflowFromJSONTyped(json: any, ignoreDiscriminator: boolean): CiWorkflow {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'id': json['id'],
        'attributes': json['attributes'] == null ? undefined : CiWorkflowAttributesFromJSON(json['attributes']),
        'relationships': json['relationships'] == null ? undefined : CiWorkflowRelationshipsFromJSON(json['relationships']),
        'links': json['links'] == null ? undefined : ResourceLinksFromJSON(json['links']),
    };
}

export function CiWorkflowToJSON(json: any): CiWorkflow {
    return CiWorkflowToJSONTyped(json, false);
}

export function CiWorkflowToJSONTyped(value?: CiWorkflow | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'id': value['id'],
        'attributes': CiWorkflowAttributesToJSON(value['attributes']),
        'relationships': CiWorkflowRelationshipsToJSON(value['relationships']),
        'links': ResourceLinksToJSON(value['links']),
    };
}

