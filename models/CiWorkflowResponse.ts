/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CiWorkflow } from './CiWorkflow';
import {
    CiWorkflowFromJSON,
    CiWorkflowFromJSONTyped,
    CiWorkflowToJSON,
    CiWorkflowToJSONTyped,
} from './CiWorkflow';
import type { CiWorkflowsResponseIncludedInner } from './CiWorkflowsResponseIncludedInner';
import {
    CiWorkflowsResponseIncludedInnerFromJSON,
    CiWorkflowsResponseIncludedInnerFromJSONTyped,
    CiWorkflowsResponseIncludedInnerToJSON,
    CiWorkflowsResponseIncludedInnerToJSONTyped,
} from './CiWorkflowsResponseIncludedInner';
import type { DocumentLinks } from './DocumentLinks';
import {
    DocumentLinksFromJSON,
    DocumentLinksFromJSONTyped,
    DocumentLinksToJSON,
    DocumentLinksToJSONTyped,
} from './DocumentLinks';

/**
 * 
 * @export
 * @interface CiWorkflowResponse
 */
export interface CiWorkflowResponse {
    /**
     * 
     * @type {CiWorkflow}
     * @memberof CiWorkflowResponse
     */
    data: CiWorkflow;
    /**
     * 
     * @type {Array<CiWorkflowsResponseIncludedInner>}
     * @memberof CiWorkflowResponse
     */
    included?: Array<CiWorkflowsResponseIncludedInner>;
    /**
     * 
     * @type {DocumentLinks}
     * @memberof CiWorkflowResponse
     */
    links: DocumentLinks;
}

/**
 * Check if a given object implements the CiWorkflowResponse interface.
 */
export function instanceOfCiWorkflowResponse(value: object): value is CiWorkflowResponse {
    if (!('data' in value) || value['data'] === undefined) return false;
    if (!('links' in value) || value['links'] === undefined) return false;
    return true;
}

export function CiWorkflowResponseFromJSON(json: any): CiWorkflowResponse {
    return CiWorkflowResponseFromJSONTyped(json, false);
}

export function CiWorkflowResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CiWorkflowResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'data': CiWorkflowFromJSON(json['data']),
        'included': json['included'] == null ? undefined : ((json['included'] as Array<any>).map(CiWorkflowsResponseIncludedInnerFromJSON)),
        'links': DocumentLinksFromJSON(json['links']),
    };
}

export function CiWorkflowResponseToJSON(json: any): CiWorkflowResponse {
    return CiWorkflowResponseToJSONTyped(json, false);
}

export function CiWorkflowResponseToJSONTyped(value?: CiWorkflowResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': CiWorkflowToJSON(value['data']),
        'included': value['included'] == null ? undefined : ((value['included'] as Array<any>).map(CiWorkflowsResponseIncludedInnerToJSON)),
        'links': DocumentLinksToJSON(value['links']),
    };
}

