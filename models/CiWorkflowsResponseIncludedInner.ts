/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { CiMacOsVersion } from './CiMacOsVersion';
import {
    instanceOfCiMacOsVersion,
    CiMacOsVersionFromJSON,
    CiMacOsVersionFromJSONTyped,
    CiMacOsVersionToJSON,
} from './CiMacOsVersion';
import type { CiProduct } from './CiProduct';
import {
    instanceOfCiProduct,
    CiProductFromJSON,
    CiProductFromJSONTyped,
    CiProductToJSON,
} from './CiProduct';
import type { CiXcodeVersion } from './CiXcodeVersion';
import {
    instanceOfCiXcodeVersion,
    CiXcodeVersionFromJSON,
    CiXcodeVersionFromJSONTyped,
    CiXcodeVersionToJSON,
} from './CiXcodeVersion';
import type { ScmRepository } from './ScmRepository';
import {
    instanceOfScmRepository,
    ScmRepositoryFromJSON,
    ScmRepositoryFromJSONTyped,
    ScmRepositoryToJSON,
} from './ScmRepository';

/**
 * @type CiWorkflowsResponseIncludedInner
 * 
 * @export
 */
export type CiWorkflowsResponseIncludedInner = CiMacOsVersion | CiProduct | CiXcodeVersion | ScmRepository;

export function CiWorkflowsResponseIncludedInnerFromJSON(json: any): CiWorkflowsResponseIncludedInner {
    return CiWorkflowsResponseIncludedInnerFromJSONTyped(json, false);
}

export function CiWorkflowsResponseIncludedInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CiWorkflowsResponseIncludedInner {
    if (json == null) {
        return json;
    }
    if (instanceOfCiMacOsVersion(json)) {
        return CiMacOsVersionFromJSONTyped(json, true);
    }
    if (instanceOfCiProduct(json)) {
        return CiProductFromJSONTyped(json, true);
    }
    if (instanceOfCiXcodeVersion(json)) {
        return CiXcodeVersionFromJSONTyped(json, true);
    }
    if (instanceOfScmRepository(json)) {
        return ScmRepositoryFromJSONTyped(json, true);
    }

    return {} as any;
}

export function CiWorkflowsResponseIncludedInnerToJSON(json: any): any {
    return CiWorkflowsResponseIncludedInnerToJSONTyped(json, false);
}

export function CiWorkflowsResponseIncludedInnerToJSONTyped(value?: CiWorkflowsResponseIncludedInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    if (instanceOfCiMacOsVersion(value)) {
        return CiMacOsVersionToJSON(value as CiMacOsVersion);
    }
    if (instanceOfCiProduct(value)) {
        return CiProductToJSON(value as CiProduct);
    }
    if (instanceOfCiXcodeVersion(value)) {
        return CiXcodeVersionToJSON(value as CiXcodeVersion);
    }
    if (instanceOfScmRepository(value)) {
        return ScmRepositoryToJSON(value as ScmRepository);
    }

    return {};
}

