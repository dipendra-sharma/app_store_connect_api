/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DiagnosticInsightType } from './DiagnosticInsightType';
import {
    DiagnosticInsightTypeFromJSON,
    DiagnosticInsightTypeFromJSONTyped,
    DiagnosticInsightTypeToJSON,
    DiagnosticInsightTypeToJSONTyped,
} from './DiagnosticInsightType';
import type { DiagnosticInsightDirection } from './DiagnosticInsightDirection';
import {
    DiagnosticInsightDirectionFromJSON,
    DiagnosticInsightDirectionFromJSONTyped,
    DiagnosticInsightDirectionToJSON,
    DiagnosticInsightDirectionToJSONTyped,
} from './DiagnosticInsightDirection';
import type { DiagnosticInsightReferenceVersionsInner } from './DiagnosticInsightReferenceVersionsInner';
import {
    DiagnosticInsightReferenceVersionsInnerFromJSON,
    DiagnosticInsightReferenceVersionsInnerFromJSONTyped,
    DiagnosticInsightReferenceVersionsInnerToJSON,
    DiagnosticInsightReferenceVersionsInnerToJSONTyped,
} from './DiagnosticInsightReferenceVersionsInner';

/**
 * 
 * @export
 * @interface DiagnosticInsight
 */
export interface DiagnosticInsight {
    /**
     * 
     * @type {DiagnosticInsightType}
     * @memberof DiagnosticInsight
     */
    insightType?: DiagnosticInsightType;
    /**
     * 
     * @type {DiagnosticInsightDirection}
     * @memberof DiagnosticInsight
     */
    direction?: DiagnosticInsightDirection;
    /**
     * 
     * @type {Array<DiagnosticInsightReferenceVersionsInner>}
     * @memberof DiagnosticInsight
     */
    referenceVersions?: Array<DiagnosticInsightReferenceVersionsInner>;
}



/**
 * Check if a given object implements the DiagnosticInsight interface.
 */
export function instanceOfDiagnosticInsight(value: object): value is DiagnosticInsight {
    return true;
}

export function DiagnosticInsightFromJSON(json: any): DiagnosticInsight {
    return DiagnosticInsightFromJSONTyped(json, false);
}

export function DiagnosticInsightFromJSONTyped(json: any, ignoreDiscriminator: boolean): DiagnosticInsight {
    if (json == null) {
        return json;
    }
    return {
        
        'insightType': json['insightType'] == null ? undefined : DiagnosticInsightTypeFromJSON(json['insightType']),
        'direction': json['direction'] == null ? undefined : DiagnosticInsightDirectionFromJSON(json['direction']),
        'referenceVersions': json['referenceVersions'] == null ? undefined : ((json['referenceVersions'] as Array<any>).map(DiagnosticInsightReferenceVersionsInnerFromJSON)),
    };
}

export function DiagnosticInsightToJSON(json: any): DiagnosticInsight {
    return DiagnosticInsightToJSONTyped(json, false);
}

export function DiagnosticInsightToJSONTyped(value?: DiagnosticInsight | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'insightType': DiagnosticInsightTypeToJSON(value['insightType']),
        'direction': DiagnosticInsightDirectionToJSON(value['direction']),
        'referenceVersions': value['referenceVersions'] == null ? undefined : ((value['referenceVersions'] as Array<any>).map(DiagnosticInsightReferenceVersionsInnerToJSON)),
    };
}

