/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DiagnosticInsight } from './DiagnosticInsight';
import {
    DiagnosticInsightFromJSON,
    DiagnosticInsightFromJSONTyped,
    DiagnosticInsightToJSON,
    DiagnosticInsightToJSONTyped,
} from './DiagnosticInsight';

/**
 * 
 * @export
 * @interface DiagnosticSignatureAttributes
 */
export interface DiagnosticSignatureAttributes {
    /**
     * 
     * @type {string}
     * @memberof DiagnosticSignatureAttributes
     */
    diagnosticType?: DiagnosticSignatureAttributesDiagnosticTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof DiagnosticSignatureAttributes
     */
    signature?: string;
    /**
     * 
     * @type {number}
     * @memberof DiagnosticSignatureAttributes
     */
    weight?: number;
    /**
     * 
     * @type {DiagnosticInsight}
     * @memberof DiagnosticSignatureAttributes
     */
    insight?: DiagnosticInsight;
}


/**
 * @export
 */
export const DiagnosticSignatureAttributesDiagnosticTypeEnum = {
    DiskWrites: 'DISK_WRITES',
    Hangs: 'HANGS',
    Launches: 'LAUNCHES'
} as const;
export type DiagnosticSignatureAttributesDiagnosticTypeEnum = typeof DiagnosticSignatureAttributesDiagnosticTypeEnum[keyof typeof DiagnosticSignatureAttributesDiagnosticTypeEnum];


/**
 * Check if a given object implements the DiagnosticSignatureAttributes interface.
 */
export function instanceOfDiagnosticSignatureAttributes(value: object): value is DiagnosticSignatureAttributes {
    return true;
}

export function DiagnosticSignatureAttributesFromJSON(json: any): DiagnosticSignatureAttributes {
    return DiagnosticSignatureAttributesFromJSONTyped(json, false);
}

export function DiagnosticSignatureAttributesFromJSONTyped(json: any, ignoreDiscriminator: boolean): DiagnosticSignatureAttributes {
    if (json == null) {
        return json;
    }
    return {
        
        'diagnosticType': json['diagnosticType'] == null ? undefined : json['diagnosticType'],
        'signature': json['signature'] == null ? undefined : json['signature'],
        'weight': json['weight'] == null ? undefined : json['weight'],
        'insight': json['insight'] == null ? undefined : DiagnosticInsightFromJSON(json['insight']),
    };
}

export function DiagnosticSignatureAttributesToJSON(json: any): DiagnosticSignatureAttributes {
    return DiagnosticSignatureAttributesToJSONTyped(json, false);
}

export function DiagnosticSignatureAttributesToJSONTyped(value?: DiagnosticSignatureAttributes | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'diagnosticType': value['diagnosticType'],
        'signature': value['signature'],
        'weight': value['weight'],
        'insight': DiagnosticInsightToJSON(value['insight']),
    };
}

