
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EndUserLicenseAgreementUpdateRequestDataRelationships } from './EndUserLicenseAgreementUpdateRequestDataRelationships';
import {
    EndUserLicenseAgreementUpdateRequestDataRelationshipsFromJSON,
    EndUserLicenseAgreementUpdateRequestDataRelationshipsFromJSONTyped,
    EndUserLicenseAgreementUpdateRequestDataRelationshipsToJSON,
    EndUserLicenseAgreementUpdateRequestDataRelationshipsToJSONTyped,
} from './EndUserLicenseAgreementUpdateRequestDataRelationships';
import type { BetaLicenseAgreementAttributes } from './BetaLicenseAgreementAttributes';
import {
    BetaLicenseAgreementAttributesFromJSON,
    BetaLicenseAgreementAttributesFromJSONTyped,
    BetaLicenseAgreementAttributesToJSON,
    BetaLicenseAgreementAttributesToJSONTyped,
} from './BetaLicenseAgreementAttributes';

/**
 * 
 * @export
 * @interface EndUserLicenseAgreementUpdateRequestData
 */
export interface EndUserLicenseAgreementUpdateRequestData {
    /**
     * 
     * @type {string}
     * @memberof EndUserLicenseAgreementUpdateRequestData
     */
    type: EndUserLicenseAgreementUpdateRequestDataTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof EndUserLicenseAgreementUpdateRequestData
     */
    id: string;
    /**
     * 
     * @type {BetaLicenseAgreementAttributes}
     * @memberof EndUserLicenseAgreementUpdateRequestData
     */
    attributes?: BetaLicenseAgreementAttributes;
    /**
     * 
     * @type {EndUserLicenseAgreementUpdateRequestDataRelationships}
     * @memberof EndUserLicenseAgreementUpdateRequestData
     */
    relationships?: EndUserLicenseAgreementUpdateRequestDataRelationships;
}


/**
 * @export
 */
export const EndUserLicenseAgreementUpdateRequestDataTypeEnum = {
    EndUserLicenseAgreements: 'endUserLicenseAgreements'
} as const;
export type EndUserLicenseAgreementUpdateRequestDataTypeEnum = typeof EndUserLicenseAgreementUpdateRequestDataTypeEnum[keyof typeof EndUserLicenseAgreementUpdateRequestDataTypeEnum];


/**
 * Check if a given object implements the EndUserLicenseAgreementUpdateRequestData interface.
 */
export function instanceOfEndUserLicenseAgreementUpdateRequestData(value: object): value is EndUserLicenseAgreementUpdateRequestData {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function EndUserLicenseAgreementUpdateRequestDataFromJSON(json: any): EndUserLicenseAgreementUpdateRequestData {
    return EndUserLicenseAgreementUpdateRequestDataFromJSONTyped(json, false);
}

export function EndUserLicenseAgreementUpdateRequestDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): EndUserLicenseAgreementUpdateRequestData {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'id': json['id'],
        'attributes': json['attributes'] == null ? undefined : BetaLicenseAgreementAttributesFromJSON(json['attributes']),
        'relationships': json['relationships'] == null ? undefined : EndUserLicenseAgreementUpdateRequestDataRelationshipsFromJSON(json['relationships']),
    };
}

export function EndUserLicenseAgreementUpdateRequestDataToJSON(json: any): EndUserLicenseAgreementUpdateRequestData {
    return EndUserLicenseAgreementUpdateRequestDataToJSONTyped(json, false);
}

export function EndUserLicenseAgreementUpdateRequestDataToJSONTyped(value?: EndUserLicenseAgreementUpdateRequestData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'id': value['id'],
        'attributes': BetaLicenseAgreementAttributesToJSON(value['attributes']),
        'relationships': EndUserLicenseAgreementUpdateRequestDataRelationshipsToJSON(value['relationships']),
    };
}

