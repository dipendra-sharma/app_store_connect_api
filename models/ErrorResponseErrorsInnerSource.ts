
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { ErrorSourceParameter } from './ErrorSourceParameter';
import {
    instanceOfErrorSourceParameter,
    ErrorSourceParameterFromJSON,
    ErrorSourceParameterFromJSONTyped,
    ErrorSourceParameterToJSON,
} from './ErrorSourceParameter';
import type { ErrorSourcePointer } from './ErrorSourcePointer';
import {
    instanceOfErrorSourcePointer,
    ErrorSourcePointerFromJSON,
    ErrorSourcePointerFromJSONTyped,
    ErrorSourcePointerToJSON,
} from './ErrorSourcePointer';

/**
 * @type ErrorResponseErrorsInnerSource
 * 
 * @export
 */
export type ErrorResponseErrorsInnerSource = ErrorSourceParameter | ErrorSourcePointer;

export function ErrorResponseErrorsInnerSourceFromJSON(json: any): ErrorResponseErrorsInnerSource {
    return ErrorResponseErrorsInnerSourceFromJSONTyped(json, false);
}

export function ErrorResponseErrorsInnerSourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorResponseErrorsInnerSource {
    if (json == null) {
        return json;
    }
    if (instanceOfErrorSourceParameter(json)) {
        return ErrorSourceParameterFromJSONTyped(json, true);
    }
    if (instanceOfErrorSourcePointer(json)) {
        return ErrorSourcePointerFromJSONTyped(json, true);
    }

    return {} as any;
}

export function ErrorResponseErrorsInnerSourceToJSON(json: any): any {
    return ErrorResponseErrorsInnerSourceToJSONTyped(json, false);
}

export function ErrorResponseErrorsInnerSourceToJSONTyped(value?: ErrorResponseErrorsInnerSource | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    if (instanceOfErrorSourceParameter(value)) {
        return ErrorSourceParameterToJSON(value as ErrorSourceParameter);
    }
    if (instanceOfErrorSourcePointer(value)) {
        return ErrorSourcePointerToJSON(value as ErrorSourcePointer);
    }

    return {};
}

