
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GameCenterAchievementUpdateRequestDataAttributes } from './GameCenterAchievementUpdateRequestDataAttributes';
import {
    GameCenterAchievementUpdateRequestDataAttributesFromJSON,
    GameCenterAchievementUpdateRequestDataAttributesFromJSONTyped,
    GameCenterAchievementUpdateRequestDataAttributesToJSON,
    GameCenterAchievementUpdateRequestDataAttributesToJSONTyped,
} from './GameCenterAchievementUpdateRequestDataAttributes';

/**
 * 
 * @export
 * @interface GameCenterAchievementUpdateRequestData
 */
export interface GameCenterAchievementUpdateRequestData {
    /**
     * 
     * @type {string}
     * @memberof GameCenterAchievementUpdateRequestData
     */
    type: GameCenterAchievementUpdateRequestDataTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof GameCenterAchievementUpdateRequestData
     */
    id: string;
    /**
     * 
     * @type {GameCenterAchievementUpdateRequestDataAttributes}
     * @memberof GameCenterAchievementUpdateRequestData
     */
    attributes?: GameCenterAchievementUpdateRequestDataAttributes;
}


/**
 * @export
 */
export const GameCenterAchievementUpdateRequestDataTypeEnum = {
    GameCenterAchievements: 'gameCenterAchievements'
} as const;
export type GameCenterAchievementUpdateRequestDataTypeEnum = typeof GameCenterAchievementUpdateRequestDataTypeEnum[keyof typeof GameCenterAchievementUpdateRequestDataTypeEnum];


/**
 * Check if a given object implements the GameCenterAchievementUpdateRequestData interface.
 */
export function instanceOfGameCenterAchievementUpdateRequestData(value: object): value is GameCenterAchievementUpdateRequestData {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function GameCenterAchievementUpdateRequestDataFromJSON(json: any): GameCenterAchievementUpdateRequestData {
    return GameCenterAchievementUpdateRequestDataFromJSONTyped(json, false);
}

export function GameCenterAchievementUpdateRequestDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameCenterAchievementUpdateRequestData {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'id': json['id'],
        'attributes': json['attributes'] == null ? undefined : GameCenterAchievementUpdateRequestDataAttributesFromJSON(json['attributes']),
    };
}

export function GameCenterAchievementUpdateRequestDataToJSON(json: any): GameCenterAchievementUpdateRequestData {
    return GameCenterAchievementUpdateRequestDataToJSONTyped(json, false);
}

export function GameCenterAchievementUpdateRequestDataToJSONTyped(value?: GameCenterAchievementUpdateRequestData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'id': value['id'],
        'attributes': GameCenterAchievementUpdateRequestDataAttributesToJSON(value['attributes']),
    };
}

