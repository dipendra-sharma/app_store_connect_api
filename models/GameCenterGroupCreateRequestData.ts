/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GameCenterGroupAttributes } from './GameCenterGroupAttributes';
import {
    GameCenterGroupAttributesFromJSON,
    GameCenterGroupAttributesFromJSONTyped,
    GameCenterGroupAttributesToJSON,
    GameCenterGroupAttributesToJSONTyped,
} from './GameCenterGroupAttributes';

/**
 * 
 * @export
 * @interface GameCenterGroupCreateRequestData
 */
export interface GameCenterGroupCreateRequestData {
    /**
     * 
     * @type {string}
     * @memberof GameCenterGroupCreateRequestData
     */
    type: GameCenterGroupCreateRequestDataTypeEnum;
    /**
     * 
     * @type {GameCenterGroupAttributes}
     * @memberof GameCenterGroupCreateRequestData
     */
    attributes?: GameCenterGroupAttributes;
}


/**
 * @export
 */
export const GameCenterGroupCreateRequestDataTypeEnum = {
    GameCenterGroups: 'gameCenterGroups'
} as const;
export type GameCenterGroupCreateRequestDataTypeEnum = typeof GameCenterGroupCreateRequestDataTypeEnum[keyof typeof GameCenterGroupCreateRequestDataTypeEnum];


/**
 * Check if a given object implements the GameCenterGroupCreateRequestData interface.
 */
export function instanceOfGameCenterGroupCreateRequestData(value: object): value is GameCenterGroupCreateRequestData {
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function GameCenterGroupCreateRequestDataFromJSON(json: any): GameCenterGroupCreateRequestData {
    return GameCenterGroupCreateRequestDataFromJSONTyped(json, false);
}

export function GameCenterGroupCreateRequestDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameCenterGroupCreateRequestData {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'attributes': json['attributes'] == null ? undefined : GameCenterGroupAttributesFromJSON(json['attributes']),
    };
}

export function GameCenterGroupCreateRequestDataToJSON(json: any): GameCenterGroupCreateRequestData {
    return GameCenterGroupCreateRequestDataToJSONTyped(json, false);
}

export function GameCenterGroupCreateRequestDataToJSONTyped(value?: GameCenterGroupCreateRequestData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'attributes': GameCenterGroupAttributesToJSON(value['attributes']),
    };
}

