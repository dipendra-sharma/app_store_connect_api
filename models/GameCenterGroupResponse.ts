/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GameCenterGroupsResponseIncludedInner } from './GameCenterGroupsResponseIncludedInner';
import {
    GameCenterGroupsResponseIncludedInnerFromJSON,
    GameCenterGroupsResponseIncludedInnerFromJSONTyped,
    GameCenterGroupsResponseIncludedInnerToJSON,
    GameCenterGroupsResponseIncludedInnerToJSONTyped,
} from './GameCenterGroupsResponseIncludedInner';
import type { GameCenterGroup } from './GameCenterGroup';
import {
    GameCenterGroupFromJSON,
    GameCenterGroupFromJSONTyped,
    GameCenterGroupToJSON,
    GameCenterGroupToJSONTyped,
} from './GameCenterGroup';
import type { DocumentLinks } from './DocumentLinks';
import {
    DocumentLinksFromJSON,
    DocumentLinksFromJSONTyped,
    DocumentLinksToJSON,
    DocumentLinksToJSONTyped,
} from './DocumentLinks';

/**
 * 
 * @export
 * @interface GameCenterGroupResponse
 */
export interface GameCenterGroupResponse {
    /**
     * 
     * @type {GameCenterGroup}
     * @memberof GameCenterGroupResponse
     */
    data: GameCenterGroup;
    /**
     * 
     * @type {Array<GameCenterGroupsResponseIncludedInner>}
     * @memberof GameCenterGroupResponse
     */
    included?: Array<GameCenterGroupsResponseIncludedInner>;
    /**
     * 
     * @type {DocumentLinks}
     * @memberof GameCenterGroupResponse
     */
    links: DocumentLinks;
}

/**
 * Check if a given object implements the GameCenterGroupResponse interface.
 */
export function instanceOfGameCenterGroupResponse(value: object): value is GameCenterGroupResponse {
    if (!('data' in value) || value['data'] === undefined) return false;
    if (!('links' in value) || value['links'] === undefined) return false;
    return true;
}

export function GameCenterGroupResponseFromJSON(json: any): GameCenterGroupResponse {
    return GameCenterGroupResponseFromJSONTyped(json, false);
}

export function GameCenterGroupResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameCenterGroupResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'data': GameCenterGroupFromJSON(json['data']),
        'included': json['included'] == null ? undefined : ((json['included'] as Array<any>).map(GameCenterGroupsResponseIncludedInnerFromJSON)),
        'links': DocumentLinksFromJSON(json['links']),
    };
}

export function GameCenterGroupResponseToJSON(json: any): GameCenterGroupResponse {
    return GameCenterGroupResponseToJSONTyped(json, false);
}

export function GameCenterGroupResponseToJSONTyped(value?: GameCenterGroupResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': GameCenterGroupToJSON(value['data']),
        'included': value['included'] == null ? undefined : ((value['included'] as Array<any>).map(GameCenterGroupsResponseIncludedInnerToJSON)),
        'links': DocumentLinksToJSON(value['links']),
    };
}

