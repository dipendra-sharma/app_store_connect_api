
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GameCenterAchievementReleaseRelationshipsGameCenterDetail } from './GameCenterAchievementReleaseRelationshipsGameCenterDetail';
import {
    GameCenterAchievementReleaseRelationshipsGameCenterDetailFromJSON,
    GameCenterAchievementReleaseRelationshipsGameCenterDetailFromJSONTyped,
    GameCenterAchievementReleaseRelationshipsGameCenterDetailToJSON,
    GameCenterAchievementReleaseRelationshipsGameCenterDetailToJSONTyped,
} from './GameCenterAchievementReleaseRelationshipsGameCenterDetail';
import type { GameCenterLeaderboardCreateRequestDataRelationshipsGameCenterLeaderboardSets } from './GameCenterLeaderboardCreateRequestDataRelationshipsGameCenterLeaderboardSets';
import {
    GameCenterLeaderboardCreateRequestDataRelationshipsGameCenterLeaderboardSetsFromJSON,
    GameCenterLeaderboardCreateRequestDataRelationshipsGameCenterLeaderboardSetsFromJSONTyped,
    GameCenterLeaderboardCreateRequestDataRelationshipsGameCenterLeaderboardSetsToJSON,
    GameCenterLeaderboardCreateRequestDataRelationshipsGameCenterLeaderboardSetsToJSONTyped,
} from './GameCenterLeaderboardCreateRequestDataRelationshipsGameCenterLeaderboardSets';
import type { GameCenterAchievementRelationshipsGameCenterGroup } from './GameCenterAchievementRelationshipsGameCenterGroup';
import {
    GameCenterAchievementRelationshipsGameCenterGroupFromJSON,
    GameCenterAchievementRelationshipsGameCenterGroupFromJSONTyped,
    GameCenterAchievementRelationshipsGameCenterGroupToJSON,
    GameCenterAchievementRelationshipsGameCenterGroupToJSONTyped,
} from './GameCenterAchievementRelationshipsGameCenterGroup';

/**
 * 
 * @export
 * @interface GameCenterLeaderboardCreateRequestDataRelationships
 */
export interface GameCenterLeaderboardCreateRequestDataRelationships {
    /**
     * 
     * @type {GameCenterAchievementReleaseRelationshipsGameCenterDetail}
     * @memberof GameCenterLeaderboardCreateRequestDataRelationships
     */
    gameCenterDetail?: GameCenterAchievementReleaseRelationshipsGameCenterDetail;
    /**
     * 
     * @type {GameCenterAchievementRelationshipsGameCenterGroup}
     * @memberof GameCenterLeaderboardCreateRequestDataRelationships
     */
    gameCenterGroup?: GameCenterAchievementRelationshipsGameCenterGroup;
    /**
     * 
     * @type {GameCenterLeaderboardCreateRequestDataRelationshipsGameCenterLeaderboardSets}
     * @memberof GameCenterLeaderboardCreateRequestDataRelationships
     */
    gameCenterLeaderboardSets?: GameCenterLeaderboardCreateRequestDataRelationshipsGameCenterLeaderboardSets;
}

/**
 * Check if a given object implements the GameCenterLeaderboardCreateRequestDataRelationships interface.
 */
export function instanceOfGameCenterLeaderboardCreateRequestDataRelationships(value: object): value is GameCenterLeaderboardCreateRequestDataRelationships {
    return true;
}

export function GameCenterLeaderboardCreateRequestDataRelationshipsFromJSON(json: any): GameCenterLeaderboardCreateRequestDataRelationships {
    return GameCenterLeaderboardCreateRequestDataRelationshipsFromJSONTyped(json, false);
}

export function GameCenterLeaderboardCreateRequestDataRelationshipsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameCenterLeaderboardCreateRequestDataRelationships {
    if (json == null) {
        return json;
    }
    return {
        
        'gameCenterDetail': json['gameCenterDetail'] == null ? undefined : GameCenterAchievementReleaseRelationshipsGameCenterDetailFromJSON(json['gameCenterDetail']),
        'gameCenterGroup': json['gameCenterGroup'] == null ? undefined : GameCenterAchievementRelationshipsGameCenterGroupFromJSON(json['gameCenterGroup']),
        'gameCenterLeaderboardSets': json['gameCenterLeaderboardSets'] == null ? undefined : GameCenterLeaderboardCreateRequestDataRelationshipsGameCenterLeaderboardSetsFromJSON(json['gameCenterLeaderboardSets']),
    };
}

export function GameCenterLeaderboardCreateRequestDataRelationshipsToJSON(json: any): GameCenterLeaderboardCreateRequestDataRelationships {
    return GameCenterLeaderboardCreateRequestDataRelationshipsToJSONTyped(json, false);
}

export function GameCenterLeaderboardCreateRequestDataRelationshipsToJSONTyped(value?: GameCenterLeaderboardCreateRequestDataRelationships | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'gameCenterDetail': GameCenterAchievementReleaseRelationshipsGameCenterDetailToJSON(value['gameCenterDetail']),
        'gameCenterGroup': GameCenterAchievementRelationshipsGameCenterGroupToJSON(value['gameCenterGroup']),
        'gameCenterLeaderboardSets': GameCenterLeaderboardCreateRequestDataRelationshipsGameCenterLeaderboardSetsToJSON(value['gameCenterLeaderboardSets']),
    };
}

