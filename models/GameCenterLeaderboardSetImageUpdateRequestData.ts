
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AppEventScreenshotUpdateRequestDataAttributes } from './AppEventScreenshotUpdateRequestDataAttributes';
import {
    AppEventScreenshotUpdateRequestDataAttributesFromJSON,
    AppEventScreenshotUpdateRequestDataAttributesFromJSONTyped,
    AppEventScreenshotUpdateRequestDataAttributesToJSON,
    AppEventScreenshotUpdateRequestDataAttributesToJSONTyped,
} from './AppEventScreenshotUpdateRequestDataAttributes';

/**
 * 
 * @export
 * @interface GameCenterLeaderboardSetImageUpdateRequestData
 */
export interface GameCenterLeaderboardSetImageUpdateRequestData {
    /**
     * 
     * @type {string}
     * @memberof GameCenterLeaderboardSetImageUpdateRequestData
     */
    type: GameCenterLeaderboardSetImageUpdateRequestDataTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof GameCenterLeaderboardSetImageUpdateRequestData
     */
    id: string;
    /**
     * 
     * @type {AppEventScreenshotUpdateRequestDataAttributes}
     * @memberof GameCenterLeaderboardSetImageUpdateRequestData
     */
    attributes?: AppEventScreenshotUpdateRequestDataAttributes;
}


/**
 * @export
 */
export const GameCenterLeaderboardSetImageUpdateRequestDataTypeEnum = {
    GameCenterLeaderboardSetImages: 'gameCenterLeaderboardSetImages'
} as const;
export type GameCenterLeaderboardSetImageUpdateRequestDataTypeEnum = typeof GameCenterLeaderboardSetImageUpdateRequestDataTypeEnum[keyof typeof GameCenterLeaderboardSetImageUpdateRequestDataTypeEnum];


/**
 * Check if a given object implements the GameCenterLeaderboardSetImageUpdateRequestData interface.
 */
export function instanceOfGameCenterLeaderboardSetImageUpdateRequestData(value: object): value is GameCenterLeaderboardSetImageUpdateRequestData {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function GameCenterLeaderboardSetImageUpdateRequestDataFromJSON(json: any): GameCenterLeaderboardSetImageUpdateRequestData {
    return GameCenterLeaderboardSetImageUpdateRequestDataFromJSONTyped(json, false);
}

export function GameCenterLeaderboardSetImageUpdateRequestDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameCenterLeaderboardSetImageUpdateRequestData {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'id': json['id'],
        'attributes': json['attributes'] == null ? undefined : AppEventScreenshotUpdateRequestDataAttributesFromJSON(json['attributes']),
    };
}

export function GameCenterLeaderboardSetImageUpdateRequestDataToJSON(json: any): GameCenterLeaderboardSetImageUpdateRequestData {
    return GameCenterLeaderboardSetImageUpdateRequestDataToJSONTyped(json, false);
}

export function GameCenterLeaderboardSetImageUpdateRequestDataToJSONTyped(value?: GameCenterLeaderboardSetImageUpdateRequestData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'id': value['id'],
        'attributes': AppEventScreenshotUpdateRequestDataAttributesToJSON(value['attributes']),
    };
}

