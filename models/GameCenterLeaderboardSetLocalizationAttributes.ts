
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GameCenterLeaderboardSetLocalizationAttributes
 */
export interface GameCenterLeaderboardSetLocalizationAttributes {
    /**
     * 
     * @type {string}
     * @memberof GameCenterLeaderboardSetLocalizationAttributes
     */
    locale?: string;
    /**
     * 
     * @type {string}
     * @memberof GameCenterLeaderboardSetLocalizationAttributes
     */
    name?: string;
}

/**
 * Check if a given object implements the GameCenterLeaderboardSetLocalizationAttributes interface.
 */
export function instanceOfGameCenterLeaderboardSetLocalizationAttributes(value: object): value is GameCenterLeaderboardSetLocalizationAttributes {
    return true;
}

export function GameCenterLeaderboardSetLocalizationAttributesFromJSON(json: any): GameCenterLeaderboardSetLocalizationAttributes {
    return GameCenterLeaderboardSetLocalizationAttributesFromJSONTyped(json, false);
}

export function GameCenterLeaderboardSetLocalizationAttributesFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameCenterLeaderboardSetLocalizationAttributes {
    if (json == null) {
        return json;
    }
    return {
        
        'locale': json['locale'] == null ? undefined : json['locale'],
        'name': json['name'] == null ? undefined : json['name'],
    };
}

export function GameCenterLeaderboardSetLocalizationAttributesToJSON(json: any): GameCenterLeaderboardSetLocalizationAttributes {
    return GameCenterLeaderboardSetLocalizationAttributesToJSONTyped(json, false);
}

export function GameCenterLeaderboardSetLocalizationAttributesToJSONTyped(value?: GameCenterLeaderboardSetLocalizationAttributes | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'locale': value['locale'],
        'name': value['name'],
    };
}

