
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GameCenterLeaderboardSetMemberLocalizationAttributes } from './GameCenterLeaderboardSetMemberLocalizationAttributes';
import {
    GameCenterLeaderboardSetMemberLocalizationAttributesFromJSON,
    GameCenterLeaderboardSetMemberLocalizationAttributesFromJSONTyped,
    GameCenterLeaderboardSetMemberLocalizationAttributesToJSON,
    GameCenterLeaderboardSetMemberLocalizationAttributesToJSONTyped,
} from './GameCenterLeaderboardSetMemberLocalizationAttributes';
import type { ResourceLinks } from './ResourceLinks';
import {
    ResourceLinksFromJSON,
    ResourceLinksFromJSONTyped,
    ResourceLinksToJSON,
    ResourceLinksToJSONTyped,
} from './ResourceLinks';
import type { GameCenterLeaderboardSetMemberLocalizationRelationships } from './GameCenterLeaderboardSetMemberLocalizationRelationships';
import {
    GameCenterLeaderboardSetMemberLocalizationRelationshipsFromJSON,
    GameCenterLeaderboardSetMemberLocalizationRelationshipsFromJSONTyped,
    GameCenterLeaderboardSetMemberLocalizationRelationshipsToJSON,
    GameCenterLeaderboardSetMemberLocalizationRelationshipsToJSONTyped,
} from './GameCenterLeaderboardSetMemberLocalizationRelationships';

/**
 * 
 * @export
 * @interface GameCenterLeaderboardSetMemberLocalization
 */
export interface GameCenterLeaderboardSetMemberLocalization {
    /**
     * 
     * @type {string}
     * @memberof GameCenterLeaderboardSetMemberLocalization
     */
    type: GameCenterLeaderboardSetMemberLocalizationTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof GameCenterLeaderboardSetMemberLocalization
     */
    id: string;
    /**
     * 
     * @type {GameCenterLeaderboardSetMemberLocalizationAttributes}
     * @memberof GameCenterLeaderboardSetMemberLocalization
     */
    attributes?: GameCenterLeaderboardSetMemberLocalizationAttributes;
    /**
     * 
     * @type {GameCenterLeaderboardSetMemberLocalizationRelationships}
     * @memberof GameCenterLeaderboardSetMemberLocalization
     */
    relationships?: GameCenterLeaderboardSetMemberLocalizationRelationships;
    /**
     * 
     * @type {ResourceLinks}
     * @memberof GameCenterLeaderboardSetMemberLocalization
     */
    links?: ResourceLinks;
}


/**
 * @export
 */
export const GameCenterLeaderboardSetMemberLocalizationTypeEnum = {
    GameCenterLeaderboardSetMemberLocalizations: 'gameCenterLeaderboardSetMemberLocalizations'
} as const;
export type GameCenterLeaderboardSetMemberLocalizationTypeEnum = typeof GameCenterLeaderboardSetMemberLocalizationTypeEnum[keyof typeof GameCenterLeaderboardSetMemberLocalizationTypeEnum];


/**
 * Check if a given object implements the GameCenterLeaderboardSetMemberLocalization interface.
 */
export function instanceOfGameCenterLeaderboardSetMemberLocalization(value: object): value is GameCenterLeaderboardSetMemberLocalization {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function GameCenterLeaderboardSetMemberLocalizationFromJSON(json: any): GameCenterLeaderboardSetMemberLocalization {
    return GameCenterLeaderboardSetMemberLocalizationFromJSONTyped(json, false);
}

export function GameCenterLeaderboardSetMemberLocalizationFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameCenterLeaderboardSetMemberLocalization {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'id': json['id'],
        'attributes': json['attributes'] == null ? undefined : GameCenterLeaderboardSetMemberLocalizationAttributesFromJSON(json['attributes']),
        'relationships': json['relationships'] == null ? undefined : GameCenterLeaderboardSetMemberLocalizationRelationshipsFromJSON(json['relationships']),
        'links': json['links'] == null ? undefined : ResourceLinksFromJSON(json['links']),
    };
}

export function GameCenterLeaderboardSetMemberLocalizationToJSON(json: any): GameCenterLeaderboardSetMemberLocalization {
    return GameCenterLeaderboardSetMemberLocalizationToJSONTyped(json, false);
}

export function GameCenterLeaderboardSetMemberLocalizationToJSONTyped(value?: GameCenterLeaderboardSetMemberLocalization | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'id': value['id'],
        'attributes': GameCenterLeaderboardSetMemberLocalizationAttributesToJSON(value['attributes']),
        'relationships': GameCenterLeaderboardSetMemberLocalizationRelationshipsToJSON(value['relationships']),
        'links': ResourceLinksToJSON(value['links']),
    };
}

