
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GameCenterLeaderboardSetRelease } from './GameCenterLeaderboardSetRelease';
import {
    GameCenterLeaderboardSetReleaseFromJSON,
    GameCenterLeaderboardSetReleaseFromJSONTyped,
    GameCenterLeaderboardSetReleaseToJSON,
    GameCenterLeaderboardSetReleaseToJSONTyped,
} from './GameCenterLeaderboardSetRelease';
import type { PagingInformation } from './PagingInformation';
import {
    PagingInformationFromJSON,
    PagingInformationFromJSONTyped,
    PagingInformationToJSON,
    PagingInformationToJSONTyped,
} from './PagingInformation';
import type { GameCenterLeaderboardSetReleasesResponseIncludedInner } from './GameCenterLeaderboardSetReleasesResponseIncludedInner';
import {
    GameCenterLeaderboardSetReleasesResponseIncludedInnerFromJSON,
    GameCenterLeaderboardSetReleasesResponseIncludedInnerFromJSONTyped,
    GameCenterLeaderboardSetReleasesResponseIncludedInnerToJSON,
    GameCenterLeaderboardSetReleasesResponseIncludedInnerToJSONTyped,
} from './GameCenterLeaderboardSetReleasesResponseIncludedInner';
import type { PagedDocumentLinks } from './PagedDocumentLinks';
import {
    PagedDocumentLinksFromJSON,
    PagedDocumentLinksFromJSONTyped,
    PagedDocumentLinksToJSON,
    PagedDocumentLinksToJSONTyped,
} from './PagedDocumentLinks';

/**
 * 
 * @export
 * @interface GameCenterLeaderboardSetReleasesResponse
 */
export interface GameCenterLeaderboardSetReleasesResponse {
    /**
     * 
     * @type {Array<GameCenterLeaderboardSetRelease>}
     * @memberof GameCenterLeaderboardSetReleasesResponse
     */
    data: Array<GameCenterLeaderboardSetRelease>;
    /**
     * 
     * @type {Array<GameCenterLeaderboardSetReleasesResponseIncludedInner>}
     * @memberof GameCenterLeaderboardSetReleasesResponse
     */
    included?: Array<GameCenterLeaderboardSetReleasesResponseIncludedInner>;
    /**
     * 
     * @type {PagedDocumentLinks}
     * @memberof GameCenterLeaderboardSetReleasesResponse
     */
    links: PagedDocumentLinks;
    /**
     * 
     * @type {PagingInformation}
     * @memberof GameCenterLeaderboardSetReleasesResponse
     */
    meta?: PagingInformation;
}

/**
 * Check if a given object implements the GameCenterLeaderboardSetReleasesResponse interface.
 */
export function instanceOfGameCenterLeaderboardSetReleasesResponse(value: object): value is GameCenterLeaderboardSetReleasesResponse {
    if (!('data' in value) || value['data'] === undefined) return false;
    if (!('links' in value) || value['links'] === undefined) return false;
    return true;
}

export function GameCenterLeaderboardSetReleasesResponseFromJSON(json: any): GameCenterLeaderboardSetReleasesResponse {
    return GameCenterLeaderboardSetReleasesResponseFromJSONTyped(json, false);
}

export function GameCenterLeaderboardSetReleasesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameCenterLeaderboardSetReleasesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(GameCenterLeaderboardSetReleaseFromJSON)),
        'included': json['included'] == null ? undefined : ((json['included'] as Array<any>).map(GameCenterLeaderboardSetReleasesResponseIncludedInnerFromJSON)),
        'links': PagedDocumentLinksFromJSON(json['links']),
        'meta': json['meta'] == null ? undefined : PagingInformationFromJSON(json['meta']),
    };
}

export function GameCenterLeaderboardSetReleasesResponseToJSON(json: any): GameCenterLeaderboardSetReleasesResponse {
    return GameCenterLeaderboardSetReleasesResponseToJSONTyped(json, false);
}

export function GameCenterLeaderboardSetReleasesResponseToJSONTyped(value?: GameCenterLeaderboardSetReleasesResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': ((value['data'] as Array<any>).map(GameCenterLeaderboardSetReleaseToJSON)),
        'included': value['included'] == null ? undefined : ((value['included'] as Array<any>).map(GameCenterLeaderboardSetReleasesResponseIncludedInnerToJSON)),
        'links': PagedDocumentLinksToJSON(value['links']),
        'meta': PagingInformationToJSON(value['meta']),
    };
}

