/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GameCenterGroupAttributes } from './GameCenterGroupAttributes';
import {
    GameCenterGroupAttributesFromJSON,
    GameCenterGroupAttributesFromJSONTyped,
    GameCenterGroupAttributesToJSON,
    GameCenterGroupAttributesToJSONTyped,
} from './GameCenterGroupAttributes';

/**
 * 
 * @export
 * @interface GameCenterLeaderboardSetUpdateRequestData
 */
export interface GameCenterLeaderboardSetUpdateRequestData {
    /**
     * 
     * @type {string}
     * @memberof GameCenterLeaderboardSetUpdateRequestData
     */
    type: GameCenterLeaderboardSetUpdateRequestDataTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof GameCenterLeaderboardSetUpdateRequestData
     */
    id: string;
    /**
     * 
     * @type {GameCenterGroupAttributes}
     * @memberof GameCenterLeaderboardSetUpdateRequestData
     */
    attributes?: GameCenterGroupAttributes;
}


/**
 * @export
 */
export const GameCenterLeaderboardSetUpdateRequestDataTypeEnum = {
    GameCenterLeaderboardSets: 'gameCenterLeaderboardSets'
} as const;
export type GameCenterLeaderboardSetUpdateRequestDataTypeEnum = typeof GameCenterLeaderboardSetUpdateRequestDataTypeEnum[keyof typeof GameCenterLeaderboardSetUpdateRequestDataTypeEnum];


/**
 * Check if a given object implements the GameCenterLeaderboardSetUpdateRequestData interface.
 */
export function instanceOfGameCenterLeaderboardSetUpdateRequestData(value: object): value is GameCenterLeaderboardSetUpdateRequestData {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function GameCenterLeaderboardSetUpdateRequestDataFromJSON(json: any): GameCenterLeaderboardSetUpdateRequestData {
    return GameCenterLeaderboardSetUpdateRequestDataFromJSONTyped(json, false);
}

export function GameCenterLeaderboardSetUpdateRequestDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameCenterLeaderboardSetUpdateRequestData {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'id': json['id'],
        'attributes': json['attributes'] == null ? undefined : GameCenterGroupAttributesFromJSON(json['attributes']),
    };
}

export function GameCenterLeaderboardSetUpdateRequestDataToJSON(json: any): GameCenterLeaderboardSetUpdateRequestData {
    return GameCenterLeaderboardSetUpdateRequestDataToJSONTyped(json, false);
}

export function GameCenterLeaderboardSetUpdateRequestDataToJSONTyped(value?: GameCenterLeaderboardSetUpdateRequestData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'id': value['id'],
        'attributes': GameCenterGroupAttributesToJSON(value['attributes']),
    };
}

