
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GameCenterLeaderboardUpdateRequestDataAttributes } from './GameCenterLeaderboardUpdateRequestDataAttributes';
import {
    GameCenterLeaderboardUpdateRequestDataAttributesFromJSON,
    GameCenterLeaderboardUpdateRequestDataAttributesFromJSONTyped,
    GameCenterLeaderboardUpdateRequestDataAttributesToJSON,
    GameCenterLeaderboardUpdateRequestDataAttributesToJSONTyped,
} from './GameCenterLeaderboardUpdateRequestDataAttributes';

/**
 * 
 * @export
 * @interface GameCenterLeaderboardUpdateRequestData
 */
export interface GameCenterLeaderboardUpdateRequestData {
    /**
     * 
     * @type {string}
     * @memberof GameCenterLeaderboardUpdateRequestData
     */
    type: GameCenterLeaderboardUpdateRequestDataTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof GameCenterLeaderboardUpdateRequestData
     */
    id: string;
    /**
     * 
     * @type {GameCenterLeaderboardUpdateRequestDataAttributes}
     * @memberof GameCenterLeaderboardUpdateRequestData
     */
    attributes?: GameCenterLeaderboardUpdateRequestDataAttributes;
}


/**
 * @export
 */
export const GameCenterLeaderboardUpdateRequestDataTypeEnum = {
    GameCenterLeaderboards: 'gameCenterLeaderboards'
} as const;
export type GameCenterLeaderboardUpdateRequestDataTypeEnum = typeof GameCenterLeaderboardUpdateRequestDataTypeEnum[keyof typeof GameCenterLeaderboardUpdateRequestDataTypeEnum];


/**
 * Check if a given object implements the GameCenterLeaderboardUpdateRequestData interface.
 */
export function instanceOfGameCenterLeaderboardUpdateRequestData(value: object): value is GameCenterLeaderboardUpdateRequestData {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function GameCenterLeaderboardUpdateRequestDataFromJSON(json: any): GameCenterLeaderboardUpdateRequestData {
    return GameCenterLeaderboardUpdateRequestDataFromJSONTyped(json, false);
}

export function GameCenterLeaderboardUpdateRequestDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameCenterLeaderboardUpdateRequestData {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'id': json['id'],
        'attributes': json['attributes'] == null ? undefined : GameCenterLeaderboardUpdateRequestDataAttributesFromJSON(json['attributes']),
    };
}

export function GameCenterLeaderboardUpdateRequestDataToJSON(json: any): GameCenterLeaderboardUpdateRequestData {
    return GameCenterLeaderboardUpdateRequestDataToJSONTyped(json, false);
}

export function GameCenterLeaderboardUpdateRequestDataToJSONTyped(value?: GameCenterLeaderboardUpdateRequestData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'id': value['id'],
        'attributes': GameCenterLeaderboardUpdateRequestDataAttributesToJSON(value['attributes']),
    };
}

