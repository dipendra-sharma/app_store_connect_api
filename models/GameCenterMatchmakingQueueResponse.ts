
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GameCenterMatchmakingQueue } from './GameCenterMatchmakingQueue';
import {
    GameCenterMatchmakingQueueFromJSON,
    GameCenterMatchmakingQueueFromJSONTyped,
    GameCenterMatchmakingQueueToJSON,
    GameCenterMatchmakingQueueToJSONTyped,
} from './GameCenterMatchmakingQueue';
import type { GameCenterMatchmakingRuleSet } from './GameCenterMatchmakingRuleSet';
import {
    GameCenterMatchmakingRuleSetFromJSON,
    GameCenterMatchmakingRuleSetFromJSONTyped,
    GameCenterMatchmakingRuleSetToJSON,
    GameCenterMatchmakingRuleSetToJSONTyped,
} from './GameCenterMatchmakingRuleSet';
import type { DocumentLinks } from './DocumentLinks';
import {
    DocumentLinksFromJSON,
    DocumentLinksFromJSONTyped,
    DocumentLinksToJSON,
    DocumentLinksToJSONTyped,
} from './DocumentLinks';

/**
 * 
 * @export
 * @interface GameCenterMatchmakingQueueResponse
 */
export interface GameCenterMatchmakingQueueResponse {
    /**
     * 
     * @type {GameCenterMatchmakingQueue}
     * @memberof GameCenterMatchmakingQueueResponse
     */
    data: GameCenterMatchmakingQueue;
    /**
     * 
     * @type {Array<GameCenterMatchmakingRuleSet>}
     * @memberof GameCenterMatchmakingQueueResponse
     */
    included?: Array<GameCenterMatchmakingRuleSet>;
    /**
     * 
     * @type {DocumentLinks}
     * @memberof GameCenterMatchmakingQueueResponse
     */
    links: DocumentLinks;
}

/**
 * Check if a given object implements the GameCenterMatchmakingQueueResponse interface.
 */
export function instanceOfGameCenterMatchmakingQueueResponse(value: object): value is GameCenterMatchmakingQueueResponse {
    if (!('data' in value) || value['data'] === undefined) return false;
    if (!('links' in value) || value['links'] === undefined) return false;
    return true;
}

export function GameCenterMatchmakingQueueResponseFromJSON(json: any): GameCenterMatchmakingQueueResponse {
    return GameCenterMatchmakingQueueResponseFromJSONTyped(json, false);
}

export function GameCenterMatchmakingQueueResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameCenterMatchmakingQueueResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'data': GameCenterMatchmakingQueueFromJSON(json['data']),
        'included': json['included'] == null ? undefined : ((json['included'] as Array<any>).map(GameCenterMatchmakingRuleSetFromJSON)),
        'links': DocumentLinksFromJSON(json['links']),
    };
}

export function GameCenterMatchmakingQueueResponseToJSON(json: any): GameCenterMatchmakingQueueResponse {
    return GameCenterMatchmakingQueueResponseToJSONTyped(json, false);
}

export function GameCenterMatchmakingQueueResponseToJSONTyped(value?: GameCenterMatchmakingQueueResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': GameCenterMatchmakingQueueToJSON(value['data']),
        'included': value['included'] == null ? undefined : ((value['included'] as Array<any>).map(GameCenterMatchmakingRuleSetToJSON)),
        'links': DocumentLinksToJSON(value['links']),
    };
}

