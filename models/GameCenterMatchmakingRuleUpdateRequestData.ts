/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GameCenterMatchmakingRuleUpdateRequestDataAttributes } from './GameCenterMatchmakingRuleUpdateRequestDataAttributes';
import {
    GameCenterMatchmakingRuleUpdateRequestDataAttributesFromJSON,
    GameCenterMatchmakingRuleUpdateRequestDataAttributesFromJSONTyped,
    GameCenterMatchmakingRuleUpdateRequestDataAttributesToJSON,
    GameCenterMatchmakingRuleUpdateRequestDataAttributesToJSONTyped,
} from './GameCenterMatchmakingRuleUpdateRequestDataAttributes';

/**
 * 
 * @export
 * @interface GameCenterMatchmakingRuleUpdateRequestData
 */
export interface GameCenterMatchmakingRuleUpdateRequestData {
    /**
     * 
     * @type {string}
     * @memberof GameCenterMatchmakingRuleUpdateRequestData
     */
    type: GameCenterMatchmakingRuleUpdateRequestDataTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof GameCenterMatchmakingRuleUpdateRequestData
     */
    id: string;
    /**
     * 
     * @type {GameCenterMatchmakingRuleUpdateRequestDataAttributes}
     * @memberof GameCenterMatchmakingRuleUpdateRequestData
     */
    attributes?: GameCenterMatchmakingRuleUpdateRequestDataAttributes;
}


/**
 * @export
 */
export const GameCenterMatchmakingRuleUpdateRequestDataTypeEnum = {
    GameCenterMatchmakingRules: 'gameCenterMatchmakingRules'
} as const;
export type GameCenterMatchmakingRuleUpdateRequestDataTypeEnum = typeof GameCenterMatchmakingRuleUpdateRequestDataTypeEnum[keyof typeof GameCenterMatchmakingRuleUpdateRequestDataTypeEnum];


/**
 * Check if a given object implements the GameCenterMatchmakingRuleUpdateRequestData interface.
 */
export function instanceOfGameCenterMatchmakingRuleUpdateRequestData(value: object): value is GameCenterMatchmakingRuleUpdateRequestData {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function GameCenterMatchmakingRuleUpdateRequestDataFromJSON(json: any): GameCenterMatchmakingRuleUpdateRequestData {
    return GameCenterMatchmakingRuleUpdateRequestDataFromJSONTyped(json, false);
}

export function GameCenterMatchmakingRuleUpdateRequestDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameCenterMatchmakingRuleUpdateRequestData {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'id': json['id'],
        'attributes': json['attributes'] == null ? undefined : GameCenterMatchmakingRuleUpdateRequestDataAttributesFromJSON(json['attributes']),
    };
}

export function GameCenterMatchmakingRuleUpdateRequestDataToJSON(json: any): GameCenterMatchmakingRuleUpdateRequestData {
    return GameCenterMatchmakingRuleUpdateRequestDataToJSONTyped(json, false);
}

export function GameCenterMatchmakingRuleUpdateRequestDataToJSONTyped(value?: GameCenterMatchmakingRuleUpdateRequestData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'id': value['id'],
        'attributes': GameCenterMatchmakingRuleUpdateRequestDataAttributesToJSON(value['attributes']),
    };
}

