
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ScmProviderType
 */
export interface ScmProviderType {
    /**
     * 
     * @type {string}
     * @memberof ScmProviderType
     */
    kind?: ScmProviderTypeKindEnum;
    /**
     * 
     * @type {string}
     * @memberof ScmProviderType
     */
    displayName?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ScmProviderType
     */
    isOnPremise?: boolean;
}


/**
 * @export
 */
export const ScmProviderTypeKindEnum = {
    BitbucketCloud: 'BITBUCKET_CLOUD',
    BitbucketServer: 'BITBUCKET_SERVER',
    GithubCloud: 'GITHUB_CLOUD',
    GithubEnterprise: 'GITHUB_ENTERPRISE',
    GitlabCloud: 'GITLAB_CLOUD',
    GitlabSelfManaged: 'GITLAB_SELF_MANAGED'
} as const;
export type ScmProviderTypeKindEnum = typeof ScmProviderTypeKindEnum[keyof typeof ScmProviderTypeKindEnum];


/**
 * Check if a given object implements the ScmProviderType interface.
 */
export function instanceOfScmProviderType(value: object): value is ScmProviderType {
    return true;
}

export function ScmProviderTypeFromJSON(json: any): ScmProviderType {
    return ScmProviderTypeFromJSONTyped(json, false);
}

export function ScmProviderTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScmProviderType {
    if (json == null) {
        return json;
    }
    return {
        
        'kind': json['kind'] == null ? undefined : json['kind'],
        'displayName': json['displayName'] == null ? undefined : json['displayName'],
        'isOnPremise': json['isOnPremise'] == null ? undefined : json['isOnPremise'],
    };
}

export function ScmProviderTypeToJSON(json: any): ScmProviderType {
    return ScmProviderTypeToJSONTyped(json, false);
}

export function ScmProviderTypeToJSONTyped(value?: ScmProviderType | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'kind': value['kind'],
        'displayName': value['displayName'],
        'isOnPremise': value['isOnPremise'],
    };
}

