
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SubscriptionOfferDuration } from './SubscriptionOfferDuration';
import {
    SubscriptionOfferDurationFromJSON,
    SubscriptionOfferDurationFromJSONTyped,
    SubscriptionOfferDurationToJSON,
    SubscriptionOfferDurationToJSONTyped,
} from './SubscriptionOfferDuration';
import type { SubscriptionOfferEligibility } from './SubscriptionOfferEligibility';
import {
    SubscriptionOfferEligibilityFromJSON,
    SubscriptionOfferEligibilityFromJSONTyped,
    SubscriptionOfferEligibilityToJSON,
    SubscriptionOfferEligibilityToJSONTyped,
} from './SubscriptionOfferEligibility';
import type { SubscriptionOfferMode } from './SubscriptionOfferMode';
import {
    SubscriptionOfferModeFromJSON,
    SubscriptionOfferModeFromJSONTyped,
    SubscriptionOfferModeToJSON,
    SubscriptionOfferModeToJSONTyped,
} from './SubscriptionOfferMode';
import type { SubscriptionCustomerEligibility } from './SubscriptionCustomerEligibility';
import {
    SubscriptionCustomerEligibilityFromJSON,
    SubscriptionCustomerEligibilityFromJSONTyped,
    SubscriptionCustomerEligibilityToJSON,
    SubscriptionCustomerEligibilityToJSONTyped,
} from './SubscriptionCustomerEligibility';

/**
 * 
 * @export
 * @interface SubscriptionOfferCodeAttributes
 */
export interface SubscriptionOfferCodeAttributes {
    /**
     * 
     * @type {string}
     * @memberof SubscriptionOfferCodeAttributes
     */
    name?: string;
    /**
     * 
     * @type {Array<SubscriptionCustomerEligibility>}
     * @memberof SubscriptionOfferCodeAttributes
     */
    customerEligibilities?: Array<SubscriptionCustomerEligibility>;
    /**
     * 
     * @type {SubscriptionOfferEligibility}
     * @memberof SubscriptionOfferCodeAttributes
     */
    offerEligibility?: SubscriptionOfferEligibility;
    /**
     * 
     * @type {SubscriptionOfferDuration}
     * @memberof SubscriptionOfferCodeAttributes
     */
    duration?: SubscriptionOfferDuration;
    /**
     * 
     * @type {SubscriptionOfferMode}
     * @memberof SubscriptionOfferCodeAttributes
     */
    offerMode?: SubscriptionOfferMode;
    /**
     * 
     * @type {number}
     * @memberof SubscriptionOfferCodeAttributes
     */
    numberOfPeriods?: number;
    /**
     * 
     * @type {number}
     * @memberof SubscriptionOfferCodeAttributes
     */
    totalNumberOfCodes?: number;
    /**
     * 
     * @type {boolean}
     * @memberof SubscriptionOfferCodeAttributes
     */
    active?: boolean;
}



/**
 * Check if a given object implements the SubscriptionOfferCodeAttributes interface.
 */
export function instanceOfSubscriptionOfferCodeAttributes(value: object): value is SubscriptionOfferCodeAttributes {
    return true;
}

export function SubscriptionOfferCodeAttributesFromJSON(json: any): SubscriptionOfferCodeAttributes {
    return SubscriptionOfferCodeAttributesFromJSONTyped(json, false);
}

export function SubscriptionOfferCodeAttributesFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriptionOfferCodeAttributes {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'customerEligibilities': json['customerEligibilities'] == null ? undefined : ((json['customerEligibilities'] as Array<any>).map(SubscriptionCustomerEligibilityFromJSON)),
        'offerEligibility': json['offerEligibility'] == null ? undefined : SubscriptionOfferEligibilityFromJSON(json['offerEligibility']),
        'duration': json['duration'] == null ? undefined : SubscriptionOfferDurationFromJSON(json['duration']),
        'offerMode': json['offerMode'] == null ? undefined : SubscriptionOfferModeFromJSON(json['offerMode']),
        'numberOfPeriods': json['numberOfPeriods'] == null ? undefined : json['numberOfPeriods'],
        'totalNumberOfCodes': json['totalNumberOfCodes'] == null ? undefined : json['totalNumberOfCodes'],
        'active': json['active'] == null ? undefined : json['active'],
    };
}

export function SubscriptionOfferCodeAttributesToJSON(json: any): SubscriptionOfferCodeAttributes {
    return SubscriptionOfferCodeAttributesToJSONTyped(json, false);
}

export function SubscriptionOfferCodeAttributesToJSONTyped(value?: SubscriptionOfferCodeAttributes | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'customerEligibilities': value['customerEligibilities'] == null ? undefined : ((value['customerEligibilities'] as Array<any>).map(SubscriptionCustomerEligibilityToJSON)),
        'offerEligibility': SubscriptionOfferEligibilityToJSON(value['offerEligibility']),
        'duration': SubscriptionOfferDurationToJSON(value['duration']),
        'offerMode': SubscriptionOfferModeToJSON(value['offerMode']),
        'numberOfPeriods': value['numberOfPeriods'],
        'totalNumberOfCodes': value['totalNumberOfCodes'],
        'active': value['active'],
    };
}

