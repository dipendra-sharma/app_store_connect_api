/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { PromotedPurchase } from './PromotedPurchase';
import {
    instanceOfPromotedPurchase,
    PromotedPurchaseFromJSON,
    PromotedPurchaseFromJSONTyped,
    PromotedPurchaseToJSON,
} from './PromotedPurchase';
import type { SubscriptionAppStoreReviewScreenshot } from './SubscriptionAppStoreReviewScreenshot';
import {
    instanceOfSubscriptionAppStoreReviewScreenshot,
    SubscriptionAppStoreReviewScreenshotFromJSON,
    SubscriptionAppStoreReviewScreenshotFromJSONTyped,
    SubscriptionAppStoreReviewScreenshotToJSON,
} from './SubscriptionAppStoreReviewScreenshot';
import type { SubscriptionAvailability } from './SubscriptionAvailability';
import {
    instanceOfSubscriptionAvailability,
    SubscriptionAvailabilityFromJSON,
    SubscriptionAvailabilityFromJSONTyped,
    SubscriptionAvailabilityToJSON,
} from './SubscriptionAvailability';
import type { SubscriptionGroup } from './SubscriptionGroup';
import {
    instanceOfSubscriptionGroup,
    SubscriptionGroupFromJSON,
    SubscriptionGroupFromJSONTyped,
    SubscriptionGroupToJSON,
} from './SubscriptionGroup';
import type { SubscriptionImage } from './SubscriptionImage';
import {
    instanceOfSubscriptionImage,
    SubscriptionImageFromJSON,
    SubscriptionImageFromJSONTyped,
    SubscriptionImageToJSON,
} from './SubscriptionImage';
import type { SubscriptionIntroductoryOffer } from './SubscriptionIntroductoryOffer';
import {
    instanceOfSubscriptionIntroductoryOffer,
    SubscriptionIntroductoryOfferFromJSON,
    SubscriptionIntroductoryOfferFromJSONTyped,
    SubscriptionIntroductoryOfferToJSON,
} from './SubscriptionIntroductoryOffer';
import type { SubscriptionLocalization } from './SubscriptionLocalization';
import {
    instanceOfSubscriptionLocalization,
    SubscriptionLocalizationFromJSON,
    SubscriptionLocalizationFromJSONTyped,
    SubscriptionLocalizationToJSON,
} from './SubscriptionLocalization';
import type { SubscriptionOfferCode } from './SubscriptionOfferCode';
import {
    instanceOfSubscriptionOfferCode,
    SubscriptionOfferCodeFromJSON,
    SubscriptionOfferCodeFromJSONTyped,
    SubscriptionOfferCodeToJSON,
} from './SubscriptionOfferCode';
import type { SubscriptionPrice } from './SubscriptionPrice';
import {
    instanceOfSubscriptionPrice,
    SubscriptionPriceFromJSON,
    SubscriptionPriceFromJSONTyped,
    SubscriptionPriceToJSON,
} from './SubscriptionPrice';
import type { SubscriptionPromotionalOffer } from './SubscriptionPromotionalOffer';
import {
    instanceOfSubscriptionPromotionalOffer,
    SubscriptionPromotionalOfferFromJSON,
    SubscriptionPromotionalOfferFromJSONTyped,
    SubscriptionPromotionalOfferToJSON,
} from './SubscriptionPromotionalOffer';
import type { WinBackOffer } from './WinBackOffer';
import {
    instanceOfWinBackOffer,
    WinBackOfferFromJSON,
    WinBackOfferFromJSONTyped,
    WinBackOfferToJSON,
} from './WinBackOffer';

/**
 * @type SubscriptionsResponseIncludedInner
 * 
 * @export
 */
export type SubscriptionsResponseIncludedInner = PromotedPurchase | SubscriptionAppStoreReviewScreenshot | SubscriptionAvailability | SubscriptionGroup | SubscriptionImage | SubscriptionIntroductoryOffer | SubscriptionLocalization | SubscriptionOfferCode | SubscriptionPrice | SubscriptionPromotionalOffer | WinBackOffer;

export function SubscriptionsResponseIncludedInnerFromJSON(json: any): SubscriptionsResponseIncludedInner {
    return SubscriptionsResponseIncludedInnerFromJSONTyped(json, false);
}

export function SubscriptionsResponseIncludedInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriptionsResponseIncludedInner {
    if (json == null) {
        return json;
    }
    if (instanceOfPromotedPurchase(json)) {
        return PromotedPurchaseFromJSONTyped(json, true);
    }
    if (instanceOfSubscriptionAppStoreReviewScreenshot(json)) {
        return SubscriptionAppStoreReviewScreenshotFromJSONTyped(json, true);
    }
    if (instanceOfSubscriptionAvailability(json)) {
        return SubscriptionAvailabilityFromJSONTyped(json, true);
    }
    if (instanceOfSubscriptionGroup(json)) {
        return SubscriptionGroupFromJSONTyped(json, true);
    }
    if (instanceOfSubscriptionImage(json)) {
        return SubscriptionImageFromJSONTyped(json, true);
    }
    if (instanceOfSubscriptionIntroductoryOffer(json)) {
        return SubscriptionIntroductoryOfferFromJSONTyped(json, true);
    }
    if (instanceOfSubscriptionLocalization(json)) {
        return SubscriptionLocalizationFromJSONTyped(json, true);
    }
    if (instanceOfSubscriptionOfferCode(json)) {
        return SubscriptionOfferCodeFromJSONTyped(json, true);
    }
    if (instanceOfSubscriptionPrice(json)) {
        return SubscriptionPriceFromJSONTyped(json, true);
    }
    if (instanceOfSubscriptionPromotionalOffer(json)) {
        return SubscriptionPromotionalOfferFromJSONTyped(json, true);
    }
    if (instanceOfWinBackOffer(json)) {
        return WinBackOfferFromJSONTyped(json, true);
    }

    return {} as any;
}

export function SubscriptionsResponseIncludedInnerToJSON(json: any): any {
    return SubscriptionsResponseIncludedInnerToJSONTyped(json, false);
}

export function SubscriptionsResponseIncludedInnerToJSONTyped(value?: SubscriptionsResponseIncludedInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    if (instanceOfPromotedPurchase(value)) {
        return PromotedPurchaseToJSON(value as PromotedPurchase);
    }
    if (instanceOfSubscriptionAppStoreReviewScreenshot(value)) {
        return SubscriptionAppStoreReviewScreenshotToJSON(value as SubscriptionAppStoreReviewScreenshot);
    }
    if (instanceOfSubscriptionAvailability(value)) {
        return SubscriptionAvailabilityToJSON(value as SubscriptionAvailability);
    }
    if (instanceOfSubscriptionGroup(value)) {
        return SubscriptionGroupToJSON(value as SubscriptionGroup);
    }
    if (instanceOfSubscriptionImage(value)) {
        return SubscriptionImageToJSON(value as SubscriptionImage);
    }
    if (instanceOfSubscriptionIntroductoryOffer(value)) {
        return SubscriptionIntroductoryOfferToJSON(value as SubscriptionIntroductoryOffer);
    }
    if (instanceOfSubscriptionLocalization(value)) {
        return SubscriptionLocalizationToJSON(value as SubscriptionLocalization);
    }
    if (instanceOfSubscriptionOfferCode(value)) {
        return SubscriptionOfferCodeToJSON(value as SubscriptionOfferCode);
    }
    if (instanceOfSubscriptionPrice(value)) {
        return SubscriptionPriceToJSON(value as SubscriptionPrice);
    }
    if (instanceOfSubscriptionPromotionalOffer(value)) {
        return SubscriptionPromotionalOfferToJSON(value as SubscriptionPromotionalOffer);
    }
    if (instanceOfWinBackOffer(value)) {
        return WinBackOfferToJSON(value as WinBackOffer);
    }

    return {};
}

