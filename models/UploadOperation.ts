
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { HttpHeader } from './HttpHeader';
import {
    HttpHeaderFromJSON,
    HttpHeaderFromJSONTyped,
    HttpHeaderToJSON,
    HttpHeaderToJSONTyped,
} from './HttpHeader';

/**
 * 
 * @export
 * @interface UploadOperation
 */
export interface UploadOperation {
    /**
     * 
     * @type {string}
     * @memberof UploadOperation
     */
    method?: string;
    /**
     * 
     * @type {string}
     * @memberof UploadOperation
     */
    url?: string;
    /**
     * 
     * @type {number}
     * @memberof UploadOperation
     */
    length?: number;
    /**
     * 
     * @type {number}
     * @memberof UploadOperation
     */
    offset?: number;
    /**
     * 
     * @type {Array<HttpHeader>}
     * @memberof UploadOperation
     */
    requestHeaders?: Array<HttpHeader>;
}

/**
 * Check if a given object implements the UploadOperation interface.
 */
export function instanceOfUploadOperation(value: object): value is UploadOperation {
    return true;
}

export function UploadOperationFromJSON(json: any): UploadOperation {
    return UploadOperationFromJSONTyped(json, false);
}

export function UploadOperationFromJSONTyped(json: any, ignoreDiscriminator: boolean): UploadOperation {
    if (json == null) {
        return json;
    }
    return {
        
        'method': json['method'] == null ? undefined : json['method'],
        'url': json['url'] == null ? undefined : json['url'],
        'length': json['length'] == null ? undefined : json['length'],
        'offset': json['offset'] == null ? undefined : json['offset'],
        'requestHeaders': json['requestHeaders'] == null ? undefined : ((json['requestHeaders'] as Array<any>).map(HttpHeaderFromJSON)),
    };
}

export function UploadOperationToJSON(json: any): UploadOperation {
    return UploadOperationToJSONTyped(json, false);
}

export function UploadOperationToJSONTyped(value?: UploadOperation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'method': value['method'],
        'url': value['url'],
        'length': value['length'],
        'offset': value['offset'],
        'requestHeaders': value['requestHeaders'] == null ? undefined : ((value['requestHeaders'] as Array<any>).map(HttpHeaderToJSON)),
    };
}

