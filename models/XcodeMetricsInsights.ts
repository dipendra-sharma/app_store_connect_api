
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MetricsInsight } from './MetricsInsight';
import {
    MetricsInsightFromJSON,
    MetricsInsightFromJSONTyped,
    MetricsInsightToJSON,
    MetricsInsightToJSONTyped,
} from './MetricsInsight';

/**
 * 
 * @export
 * @interface XcodeMetricsInsights
 */
export interface XcodeMetricsInsights {
    /**
     * 
     * @type {Array<MetricsInsight>}
     * @memberof XcodeMetricsInsights
     */
    trendingUp?: Array<MetricsInsight>;
    /**
     * 
     * @type {Array<MetricsInsight>}
     * @memberof XcodeMetricsInsights
     */
    regressions?: Array<MetricsInsight>;
}

/**
 * Check if a given object implements the XcodeMetricsInsights interface.
 */
export function instanceOfXcodeMetricsInsights(value: object): value is XcodeMetricsInsights {
    return true;
}

export function XcodeMetricsInsightsFromJSON(json: any): XcodeMetricsInsights {
    return XcodeMetricsInsightsFromJSONTyped(json, false);
}

export function XcodeMetricsInsightsFromJSONTyped(json: any, ignoreDiscriminator: boolean): XcodeMetricsInsights {
    if (json == null) {
        return json;
    }
    return {
        
        'trendingUp': json['trendingUp'] == null ? undefined : ((json['trendingUp'] as Array<any>).map(MetricsInsightFromJSON)),
        'regressions': json['regressions'] == null ? undefined : ((json['regressions'] as Array<any>).map(MetricsInsightFromJSON)),
    };
}

export function XcodeMetricsInsightsToJSON(json: any): XcodeMetricsInsights {
    return XcodeMetricsInsightsToJSONTyped(json, false);
}

export function XcodeMetricsInsightsToJSONTyped(value?: XcodeMetricsInsights | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'trendingUp': value['trendingUp'] == null ? undefined : ((value['trendingUp'] as Array<any>).map(MetricsInsightToJSON)),
        'regressions': value['regressions'] == null ? undefined : ((value['regressions'] as Array<any>).map(MetricsInsightToJSON)),
    };
}

